Index: JavaFXapp/src/Components/activeUsersScreen/activeUsersScreen.fxml
===================================================================
diff --git a/JavaFXapp/src/Components/activeUsersScreen/activeUsersScreen.fxml b/JavaFXapp/src/Components/activeUsersScreen/activeUsersScreen.fxml
deleted file mode 100644
--- a/JavaFXapp/src/Components/activeUsersScreen/activeUsersScreen.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import java.lang.*?>
-<?import java.util.*?>
-<?import javafx.scene.*?>
-<?import javafx.scene.control.*?>
-<?import javafx.scene.layout.*?>
-
-<AnchorPane xmlns="http://javafx.com/javafx"
-            xmlns:fx="http://javafx.com/fxml"
-            fx:controller="Components.activeUsersScreen.ActiveUsersScreen"
-            prefHeight="400.0" prefWidth="600.0">
-
-</AnchorPane>
Index: JavaFXapp/src/appControl/marketAppContainer.fxml
===================================================================
diff --git a/JavaFXapp/src/appControl/marketAppContainer.fxml b/JavaFXapp/src/appControl/marketAppContainer.fxml
deleted file mode 100644
--- a/JavaFXapp/src/appControl/marketAppContainer.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.layout.BorderPane?>
-<?import javafx.scene.layout.VBox?>
-
-<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="481.0" prefWidth="1000.0" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="appControl.ApplicationControl">
-<!--   <fx:include fx:id="tradeLeftComponent" prefHeight="400.0" prefWidth="200.0" source="../Components/inputScreen/tradeInputScreen/tradeInputScreen.fxml">-->
-<!--   </fx:include>-->
-   <top>
-
-      <fx:include fx:id="topComponent" source="../menuScreen/menuScreen.fxml">
-      </fx:include>
-   </top>
-
-
-
-      <center>
-      <fx:include fx:id="bodyComponent" source="../usersTabPane/users.fxml">
-      </fx:include>
-   </center>
-   <bottom>
-      <VBox prefHeight="200.0" prefWidth="100.0" BorderPane.alignment="CENTER">
-         <children>
-            <Label text="Dave the messenger:       **Just remember &quot;no one loves the messenger who brings bad news&quot;. Dave can be quite nice too." />
-            <TextArea fx:id="textAreaInformingUser" prefHeight="200.0" prefWidth="200.0" />
-         </children>
-         <BorderPane.margin>
-            <Insets bottom="5.0" left="5.0" right="5.0" top="5.0" />
-         </BorderPane.margin>
-         <padding>
-            <Insets bottom="5.0" left="5.0" right="5.0" top="5.0" />
-         </padding>
-      </VBox>
-   </bottom>
-
-</BorderPane>
Index: SystemEngine/src/SystemEngine/generated/RseUsers.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseUsers.java b/SystemEngine/src/SystemEngine/generated/RseUsers.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseUsers.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,78 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import java.util.ArrayList;
-import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element ref="{}rse-user" maxOccurs="unbounded"/>
- *       &lt;/sequence>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-    "rseUser"
-})
-@XmlRootElement(name = "rse-users")
-public class RseUsers {
-
-    @XmlElement(name = "rse-user", required = true)
-    protected List<RseUser> rseUser;
-
-    /**
-     * Gets the value of the rseUser property.
-     * 
-     * <p>
-     * This accessor method returns a reference to the live list,
-     * not a snapshot. Therefore any modification you make to the
-     * returned list will be present inside the JAXB object.
-     * This is why there is not a <CODE>set</CODE> method for the rseUser property.
-     * 
-     * <p>
-     * For example, to add a new item, do as follows:
-     * <pre>
-     *    getRseUser().add(newItem);
-     * </pre>
-     * 
-     * 
-     * <p>
-     * Objects of the following type(s) are allowed in the list
-     * {@link RseUser }
-     * 
-     * 
-     */
-    public List<RseUser> getRseUser() {
-        if (rseUser == null) {
-            rseUser = new ArrayList<RseUser>();
-        }
-        return this.rseUser;
-    }
-
-}
Index: SystemEngine/src/SystemEngine/generated/RseItem.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseItem.java b/SystemEngine/src/SystemEngine/generated/RseItem.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseItem.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,86 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;attribute name="symbol" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
- *       &lt;attribute name="quantity" use="required" type="{http://www.w3.org/2001/XMLSchema}int" />
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "")
-@XmlRootElement(name = "rse-item")
-public class RseItem {
-
-    @XmlAttribute(name = "symbol", required = true)
-    protected String symbol;
-    @XmlAttribute(name = "quantity", required = true)
-    protected int quantity;
-
-    /**
-     * Gets the value of the symbol property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link String }
-     *     
-     */
-    public String getSymbol() {
-        return symbol;
-    }
-
-    /**
-     * Sets the value of the symbol property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link String }
-     *     
-     */
-    public void setSymbol(String value) {
-        this.symbol = value;
-    }
-
-    /**
-     * Gets the value of the quantity property.
-     * 
-     */
-    public int getQuantity() {
-        return quantity;
-    }
-
-    /**
-     * Sets the value of the quantity property.
-     * 
-     */
-    public void setQuantity(int value) {
-        this.quantity = value;
-    }
-
-}
Index: JavaFXapp/src/usersTabPane/adminTab/admin.fxml
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/adminTab/admin.fxml b/JavaFXapp/src/usersTabPane/adminTab/admin.fxml
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/adminTab/admin.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,98 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.ComboBox?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.Separator?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.ColumnConstraints?>
-<?import javafx.scene.layout.GridPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.RowConstraints?>
-
-
-<AnchorPane xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="usersTabPane.adminTab.AdminTabController">
-   <children>
-      <GridPane alignment="CENTER" hgap="5.0" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" vgap="5.0">
-        <columnConstraints>
-          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-        </columnConstraints>
-        <rowConstraints>
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-        </rowConstraints>
-         <children>
-            <Label contentDisplay="CENTER" text="Admin, can you feel the power?" />
-            <Label text="Buy Instructions:" GridPane.rowIndex="1" />
-            <Label text="Sale Instructions:" GridPane.columnIndex="1" GridPane.rowIndex="1" />
-            <Label text="Transaction History:" GridPane.rowIndex="3" />
-            <HBox alignment="CENTER" GridPane.columnIndex="1">
-               <children>
-                  <Label text="Searched stock:" />
-                  <ComboBox fx:id="comboBoxChooseStock2" prefWidth="150.0" promptText="Choose stock here" />
-                  <Separator orientation="VERTICAL" prefHeight="200.0" />
-                  <Button mnemonicParsing="false" text="Search!" />
-               </children>
-            </HBox>
-            <TableView fx:id="tableViewBuyBook" prefHeight="318.0" prefWidth="601.0" GridPane.rowIndex="2">
-               <columns>
-                  <TableColumn fx:id="tabBuyPrice" prefWidth="75.0" text="Price" />
-                  <TableColumn fx:id="tabBuyQuantity" prefWidth="75.0" text="Quantity" />
-                  <TableColumn fx:id="tabBuyDate" prefWidth="75.0" text="Date\Time" />
-                  <TableColumn fx:id="tabBuyOriginal" prefWidth="75.0" text="Original Type" />
-                  <TableColumn fx:id="tabBuyTrader" prefWidth="75.0" text="Trader" />
-               </columns>
-               <columnResizePolicy>
-                  <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-               </columnResizePolicy>
-            </TableView>
-            <TableView fx:id="tableViewSaleBook" prefHeight="318.0" prefWidth="601.0" GridPane.columnIndex="1" GridPane.rowIndex="2">
-               <columns>
-                  <TableColumn fx:id="tabSellPrice" prefWidth="75.0" text="Price" />
-                  <TableColumn fx:id="tabSellQuantity" prefWidth="75.0" text="Quantity" />
-                  <TableColumn fx:id="tabSellDate" prefWidth="75.0" text="Date\Time" />
-                  <TableColumn fx:id="tabSellOriginal" prefWidth="75.0" text="Original Type" />
-                  <TableColumn fx:id="tabSellTrader" prefWidth="75.0" text="Trader" />
-               </columns>
-               <columnResizePolicy>
-                  <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-               </columnResizePolicy>
-            </TableView>
-            <TableView fx:id="tableViewTransactionBook" prefHeight="318.0" prefWidth="601.0" GridPane.rowIndex="4">
-               <columns>
-                  <TableColumn fx:id="tabTransactionPrice" prefWidth="75.0" text="Price" />
-                  <TableColumn fx:id="tabTransactionQuantity" prefWidth="75.0" text="Quantity" />
-                  <TableColumn fx:id="tabTransactionDate" prefWidth="75.0" text="Date\Time" />
-                  <TableColumn fx:id="tabTransactionOriginal" prefWidth="75.0" text="Original Type" />
-                  <TableColumn fx:id="tabTransactionBuyer" prefWidth="75.0" text="Buyer" />
-                  <TableColumn fx:id="tabTransactionSeller" prefWidth="75.0" text="Seller" />
-               </columns>
-               <columnResizePolicy>
-                  <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-               </columnResizePolicy>
-            </TableView>
-            <Label text="Actions History" GridPane.columnIndex="1" GridPane.rowIndex="3" />
-            <TableView fx:id="tableActionsHistory" prefHeight="318.0" prefWidth="601.0" GridPane.columnIndex="1" GridPane.rowIndex="4">
-               <columns>
-                  <TableColumn fx:id="colHistoryActionNumber" prefWidth="75.0" text="Action No'" />
-                  <TableColumn fx:id="colHistoryMessage" prefWidth="75.0" text="Message" />
-                  <TableColumn fx:id="colHistoryTime" prefWidth="75.0" text="Time" />
-               </columns>
-               <columnResizePolicy>
-                  <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-               </columnResizePolicy>
-            </TableView>
-         </children>
-         <padding>
-            <Insets bottom="5.0" left="5.0" right="5.0" top="5.0" />
-         </padding>
-      </GridPane>
-   </children>
-</AnchorPane>
Index: SystemEngine/src/SystemEngine/Exceptions/NullPriceException.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Exceptions/NullPriceException.java b/SystemEngine/src/SystemEngine/Exceptions/NullPriceException.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Exceptions/NullPriceException.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,8 +0,0 @@
-package SystemEngine.Exceptions;
-
-public class NullPriceException extends  IllegalArgumentException{
-    public NullPriceException(String s){
-        super(s);
-    }
-}
-
Index: DTO/JavaFX.iml
===================================================================
diff --git a/DTO/JavaFX.iml b/DTO/JavaFX.iml
deleted file mode 100644
--- a/DTO/JavaFX.iml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: DTO/src/DTO/InstructionDTO.java
===================================================================
diff --git a/DTO/src/DTO/InstructionDTO.java b/DTO/src/DTO/InstructionDTO.java
deleted file mode 100644
--- a/DTO/src/DTO/InstructionDTO.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,128 +0,0 @@
-package DTO;
-
-import SystemEngine.Instruction.Instruction;
-
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-
-public class InstructionDTO implements Comparable {
-    public InstructionDTO(Instruction originalIns) {
-        this.quantity = originalIns.getQuantity();
-        this.time = originalIns.getDate();
-        this.price = originalIns.getPrice();
-        this.isNew = originalIns.checkIfNew();
-        this.isBuy = originalIns.isBuy();
-        this.instructionType = originalIns.getClass().getSimpleName();
-        this.operatorName = originalIns.getInvokersName();
-        this.strTime = originalIns.getDate().format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS"));
-    }
-    public InstructionDTO(){}
-
-    public void setQuantity(int quantity) {
-        this.quantity = quantity;
-    }
-
-    public void setTime(LocalDateTime time) {
-        this.time = time;
-    }
-
-    public void setPrice(int price) {
-        this.price = price;
-    }
-
-    public void setBuy(boolean buy) {
-        isBuy = buy;
-    }
-
-    public void setNew(boolean aNew) {
-        isNew = aNew;
-    }
-
-    public void setInstructionType(String instructionType) {
-        this.instructionType = instructionType;
-    }
-
-    public void setOperatorName(String operatorName) {
-        this.operatorName = operatorName;
-    }
-
-    public void setStrTime(String strTime) {
-        this.strTime = strTime;
-    }
-
-    public String getInstructionType(){return instructionType; }
-
-    public boolean getIsBuy() {return isBuy;}
-
-    public int getQuantity() {
-        return quantity;
-    }
-
-    public LocalDateTime getTime() {
-        return time;
-    }
-
-    public int getPrice() {
-        return price;
-    }
-
-    public int getCycle() {
-        return price*quantity;
-    }
-
-//    public String getInstructionType(){
-//        return instructionType;
-//    }
-//    public String getOperatorsName() {
-//        return operatorName;
-//    }
-
-    public boolean isNew() {
-        return isNew;
-    }
-    private int quantity;
-    private LocalDateTime time;
-    private int price = 0;
-    private boolean isBuy, isNew = true;
-    private String instructionType;
-
-    private String operatorName;
-    private String strTime;
-
-    public int compareTo(Object o1) {
-        InstructionDTO otherIns = ((InstructionDTO) o1);
-        int priceSub = this.price - otherIns.price;
-
-        if (this.isBuy == true) {
-            if (this.price == otherIns.price) {
-//                System.out.println(this.date.getNano() - otherIns.date.getNano());
-//                return this.date.getNano() - otherIns.date.getNano();
-                return -this.time.compareTo(otherIns.time);
-            }
-            else {
-                return -priceSub;
-            }
-        } else {
-            if (this.price == otherIns.price) {
-                return -this.time.compareTo(otherIns.time);
-            }
-            else {
-                return priceSub;
-            }
-
-        }
-    }
-
-
-    public boolean isBuy() {
-        return isBuy;
-    }
-
-    public String getOperatorName() {
-        return operatorName;
-    }
-
-    public String getStrTime() {
-        return strTime;
-    }
-}
Index: JavaFXapp/src/Components/outputScreen/outputStocks/OutputScreenController.java
===================================================================
diff --git a/JavaFXapp/src/Components/outputScreen/outputStocks/OutputScreenController.java b/JavaFXapp/src/Components/outputScreen/outputStocks/OutputScreenController.java
deleted file mode 100644
--- a/JavaFXapp/src/Components/outputScreen/outputStocks/OutputScreenController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,338 +0,0 @@
-package Components.outputScreen.outputStocks;
-
-import DTO.CMD4ReturnBundle;
-import DTO.InstructionDTO;
-import DTO.StockDTO;
-import DTO.TransactionDTO;
-import SystemEngine.StocksTradeSystem;
-import appControl.ApplicationControl;
-import appControl.SubController;
-import appControl.SubScreen;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-import javafx.collections.FXCollections;
-import javafx.collections.ObservableList;
-import javafx.fxml.FXML;
-import javafx.scene.control.*;
-import javafx.scene.control.cell.PropertyValueFactory;
-
-import java.io.IOException;
-import java.time.format.DateTimeFormatter;
-import java.util.List;
-
-public class OutputScreenController implements SubScreen {
-
-//    @FXML private TabPane actionsBar;
-//    @FXML private Tab mainTabIntroduction;
-//    @FXML private Tab mainTabOpenStocksBook;
-    @FXML private Tab getMainTabTrade;
-
-    @FXML private Tab StocksBook;
-    @FXML private Tab mainTabTrade;
-    @FXML private Tab TabTrade;
-
-    @FXML private Tab TabTransaction;
-    @FXML private TableView<TransactionDTO> tableViewTransactionBook;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTransactionPrice;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTransactionQuantity;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionDate;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionOriginal;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionBuyer;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionSeller;
-
-    @FXML private Tab tabSell;
-    @FXML private TableView<InstructionDTO> tableViewSaleBook;
-    @FXML private TableColumn<InstructionDTO, Integer> tabSellPrice;
-    @FXML private TableColumn<InstructionDTO, Integer> tabSellQuantity;
-    @FXML private TableColumn<InstructionDTO, String> tabSellDate;
-    @FXML private TableColumn<InstructionDTO, String> tabSellOriginal;
-    @FXML private TableColumn<InstructionDTO, String> tabSellTrader;
-
-
-    @FXML private TableView<InstructionDTO> tableViewBuyBook;
-    @FXML private TableColumn<InstructionDTO, Integer> tabBuyPrice;
-    @FXML private TableColumn<InstructionDTO, Integer> tabBuyQuantity;
-    @FXML private TableColumn<InstructionDTO, String> tabBuyDate;
-    @FXML private TableColumn<InstructionDTO, String> tabBuyOriginal;
-    @FXML private TableColumn<InstructionDTO, String> tabBuyTrader;
-
-    @FXML private Label bookTableHeader;
-
-    @FXML private TableView<TransactionDTO> tableViewTrade;
-    @FXML private TableColumn<TransactionDTO, String> tabTradeTabDate;
-    @FXML private TableColumn<TransactionDTO, String> tabTradeTabType;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTradeTabQuantity;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTradeTabPrice;
-
-    @FXML private TextArea textAreaInfo;
-
-    StringProperty searchedStock;
-
-    @Override public void setManager(StocksTradeSystem marketManager) { this.marketManager = marketManager;    }
-    @Override public void setMainController(ApplicationControl mainController) {
-        this.mainController = mainController;
-    }
-
-
-    public void updateStocksBookSearchedSymbol(StockDTO stock, String enteredSymbolText) {
-        updateBuyBook(stock);
-        updateSaleBook(stock);
-        updateSaleTransactionsBook(stock);
-        searchedStock.set("Company name: " + stock.getCompanyName() + " & " + "Stocks symbol: " + enteredSymbolText);
-
-    }
-
-    private void updateSaleTransactionsBook(StockDTO stock) {
-        tabTransactionPrice.setCellValueFactory(new PropertyValueFactory<TransactionDTO, Integer>("price"));
-        tabTransactionQuantity.setCellValueFactory(new PropertyValueFactory<TransactionDTO, Integer>("quantity"));
-        tabTransactionDate.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("strTime"));
-        tabTransactionOriginal.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("instructionType"));
-        tabTransactionSeller.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("seller"));
-        tabTransactionBuyer.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("buyer"));
-        tableViewTransactionBook.getItems().setAll(FXCollections.observableArrayList(stock.getTransactionList()));
-
-    }
-
-
-    private void updateSaleBook(StockDTO stock) {
-        tabSellPrice.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("price"));
-        tabSellQuantity.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("quantity"));
-        tabSellDate.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("strTime"));
-        tabSellOriginal.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("instructionType"));
-        tabSellTrader.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("operatorName"));
-        tableViewSaleBook.getItems().setAll(FXCollections.observableArrayList(stock.getSaleList()));
-    }
-
-    private void updateBuyBook(StockDTO stock) {
-        tabBuyPrice.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("price"));
-        tabBuyQuantity.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("quantity"));
-        tabBuyDate.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("strTime"));
-        tabBuyOriginal.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("instructionType"));
-        tabBuyTrader.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("operatorName"));
-        tableViewBuyBook.getItems().setAll(FXCollections.observableArrayList(stock.getBuyList()));
-    }
-
-    public void updateTradeScreen(CMD4ReturnBundle bundle) { // opens the bundle to the screen in the stages
-        //1 - update Table
-        if (bundle.getTransactionsMade() != null) {
-
-            List<TransactionDTO> listInBundle = bundle.getTransactionsMade();
-            tabTradeTabDate.setCellValueFactory(new PropertyValueFactory<>("strTime"));
-            tabTradeTabType.setCellValueFactory(new PropertyValueFactory<>("instructionType"));
-            tabTradeTabPrice.setCellValueFactory(new PropertyValueFactory<>("price"));
-            tabTradeTabQuantity.setCellValueFactory(new PropertyValueFactory<>("quantity"));
-            ObservableList<TransactionDTO> list = FXCollections.observableArrayList(bundle.getTransactionsMade());
-            tableViewTrade.getItems().setAll(list);
-        }
-//2 - update Info box
-        textAreaInfo.clear();
-        boolean isBuy = mainController.isCurrentlyBuying();
-        if (bundle.getInsDTO() == null) {
-
-            if (isBuy) {
-                textAreaInfo.setText("Perfect match found!\nSuccessfully acquired the full extent of the request\n. ");
-            } else {
-                textAreaInfo.setText("Perfect match found!\nSuccessfully sold the full extent of the request\n. ");
-            }
-
-        } else if (bundle.getTransactionsMade().size() != 0) {
-
-            if (isBuy) {
-                textAreaInfo.appendText("Partially match found!\nSuccessfully bought some of the request.\n");
-            } else {
-                textAreaInfo.appendText("Partially match found!\nSuccessfully sold some of the request.\n");
-            }
-
-            if (isBuy) {
-                textAreaInfo.appendText("\nThis partial updateUserAfterBuying instruction was been added to the market(the reminder after partially buying some of the stocks): \n");
-            } else {
-                textAreaInfo.appendText("\nThis partial sale instruction was added to the market(the reminder after partially selling some of the stock): \n");
-            }
-            textAreaInfo.appendText(instructionTimePriceQuantity(bundle.getInsDTO()));
-        } else {
-            if (isBuy)
-                textAreaInfo.appendText("There are no active sale instruction that matches with your request.\n");
-            else
-                textAreaInfo.appendText("There are no active updateUserAfterBuying instruction that matches with your request.\n");
-            if (isBuy)
-                textAreaInfo.appendText("The full updateUserAfterBuying instruction that has been added to the market. \n");
-            else
-                textAreaInfo.appendText("The full sale instruction that has been added to the market. \n");
-        }
-    }
-
-
-
-
-
-
-//    public ObservableList<InstructionDTO> getProduct(StockDTO stock) {
-//
-//        return FXCollections.observableArrayList(stock.getBuyList());
-//    }
-
-//    public void LoadMiddle(StockDTO stock, String symbol) {
-//        updateStocksBookSearchedSymbol(stock);
-//        bookTableHeader.setText("Symbol: " + symbol + " | " + "Company name: " + stock.getCompanyName());
-//    }
-
-    public String stockHeaderFormat(int i) {
-        return "|~~~~~~~~~~~~~~~~~~~~" + (i) + "~~~~~~~~~~~~~~~~~~~~|\n";
-    }
-
-    public String instructionTimePriceQuantity(InstructionDTO ins) {
-        return "Time - " + ins.getTime().format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "\nPrice - " + ins.getPrice() +
-                "\nQuantity - " + ins.getQuantity();
-
-    }
-
-    public OutputScreenController(){
-        searchedStock = new SimpleStringProperty("Searched Stock");
-        System.out.println("body control constructor");
-    }
-
-    public void initialize() {
-        System.out.println("Output screen controller init");
-        bookTableHeader.textProperty().bind(searchedStock);
-        tableViewBuyBook.editableProperty().setValue(false);
-        textAreaInfo.editableProperty().setValue(false);
-
-
-//        actionsBar.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
-//                    if((newValue.getText().equals(mainTabOpenStocksBook.getText()))) {
-//                        System.out.println("in main StocksBook tab");
-//                        try {
-//                            mainController.requestLoadUI(SubController.Type.STOCKS_BOOK);
-//                        } catch (IOException e) {
-//                            e.printStackTrace();
-//                        }
-//                    }
-//                    else if((newValue.getText().equals("Trade"))){ //change the connected user only if select tab that not Admin
-//                        System.out.println("in main trade tab");
-//                        try {
-//                            mainController.requestLoadUI(SubController.Type.TRADE);
-//                        } catch (IOException e) {
-//                            e.printStackTrace();
-//                        }
-//                    }
-//                    else if((newValue.getText().equals(mainTabIntroduction.getText()))){ //change the connected user only if select tab that not Admin
-//                        System.out.println("in main introduction tab");
-//                        try {
-//                            mainController.requestLoadUI(SubController.Type.INTRODUCTION);
-//                        } catch (IOException e) {
-//                            e.printStackTrace();
-//                        }
-//                    }
-//                });
-
-
-    }
-    private SubController thisController;
-    private ApplicationControl mainController;
-    private StocksTradeSystem marketManager;
-
-   public String presentingTransaction(TransactionDTO tr) {
-        return "Time - " + tr.getTime().format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "\nPrice - " + tr.getPrice() +
-                "\nQuantity - " + tr.getQuantity() + "\nCycle - " + tr.getTotalPayment();
-    }
-
-
-}
-
-//    public TableView<InstructionDTO> updateStocksBookSearchedSymbol(StockDTO stock) {
-//        tabBuyPrice = new TableColumn<>("Price");
-//        tabBuyPrice.setMinWidth(200);
-//        tabBuyPrice.setCellValueFactory(new PropertyValueFactory<>("price"));
-//
-//        tabBuyQuantity = new TableColumn<>("Quantity");
-//        tabBuyQuantity.setMinWidth(200);
-//        tabBuyQuantity.setCellValueFactory(new PropertyValueFactory<>("quantity"));
-//
-//
-//        tabBuyDate = new TableColumn<>("Date\\Time");
-//        tabBuyDate.setMinWidth(200);
-//        tabBuyDate.setCellValueFactory(new PropertyValueFactory<>("time"));
-//
-//        tabBuyOriginal = new TableColumn<>("Original Type");
-//        tabBuyOriginal.setMinWidth(200);
-//        tabBuyOriginal.setCellValueFactory(new PropertyValueFactory<>("instructionType"));
-//
-//        tabBuyTrader = new TableColumn<>("Trader");
-//        tabBuyTrader.setMinWidth(200);
-//        tabBuyTrader.setCellValueFactory(new PropertyValueFactory<>("operatorName"));
-//
-//
-//        purchaseBook = new TableView<>();
-//        ObservableList<InstructionDTO> lst = getProduct(stock);
-//        System.out.println(instructionTimePriceQuantity(lst.get(0)));
-//        purchaseBook.setItems(lst);
-//
-//       purchaseBook.getColumns().add(tabBuyPrice);
-//        purchaseBook.getColumns().add(tabBuyQuantity);
-//        purchaseBook.getColumns().add(tabBuyDate);
-//        purchaseBook.getColumns().add(tabBuyOriginal);
-//        purchaseBook.getColumns().add(tabBuyTrader);
-//
-//        boolean status = purchaseBook.getColumns().addAll(tabBuyPrice, tabBuyQuantity, tabBuyDate, tabBuyOriginal,tabBuyTrader);
-//        System.out.println(status);
-//
-//
-//
-////        int index = 1;
-////        System.out.println("Active investors are looking to purchase - ");
-////        if (stock.getBuyList().isEmpty()) {
-////            System.out.println("No one is looking for stocks!");
-////        } else {
-////            for (InstructionDTO ins : stock.getBuyList()) {
-////                System.out.println(stockHeaderFormat(index++) + instructionTimePriceQuantity(ins));
-////            }
-////        }
-////        System.out.println(lst.get(0).getPrice() + " " + lst.get(0).getQuantity());
-//
-//        return purchaseBook;
-//    }
-
-//  if(actionsBar.getSelectionModel().getSelectedIndex() == 0){
-//        System.out.println("0");
-//    }
-//        if(actionsBar.getSelectionModel().getSelectedIndex() == 1){
-//        System.out.println("1");
-//    }
-//        if(actionsBar.getSelectionModel().getSelectedIndex() == 2){
-//        System.out.println("2");
-
-//            if((newValue.getText().equals(mainTabIntroduction.getText()))){ //change the connected user only if select tab that not Admin
-//                System.out.println("in main introduction tab");
-//                try {
-//                    mainController.requestLoadUI(SubController.Type.INTRODUCTION);
-//                } catch (IOException e) {
-//                    e.printStackTrace();
-//                }
-//            }
-//            else if((newValue.getText().equals("Trade"))){ //change the connected user only if select tab that not Admin
-//                System.out.println("in main trade tab");
-//                try {
-//                    mainController.requestLoadUI(SubController.Type.TRADE);
-//                } catch (IOException e) {
-//                    e.printStackTrace();
-//                }
-//            }
-//            else if((newValue.getText().equals(mainTabOpenStocksBook.getText()))) {
-//                System.out.println("in main StocksBook tab");
-//                try {
-//                    mainController.requestLoadUI(SubController.Type.STOCKS_BOOK);
-//                } catch (IOException e) {
-//                    e.printStackTrace();
-//                }
-//            }
-//        });
-
-
-//    @FXML
-//    void tradeListener(ActionEvent event) {
-//        System.out.println("here");
-//     //   mainController.requestLoadTradeUI();
-//    }
-
-
-
Index: DTO/DTO.iml
===================================================================
diff --git a/DTO/DTO.iml b/DTO/DTO.iml
deleted file mode 100644
--- a/DTO/DTO.iml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module" module-name="JavaFXapp" />
-    <orderEntry type="module" module-name="SystemEngine" />
-  </component>
-</module>
\ No newline at end of file
Index: SystemEngine/src/SystemEngine/generated/RizpaStockExchangeDescriptor.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RizpaStockExchangeDescriptor.java b/SystemEngine/src/SystemEngine/generated/RizpaStockExchangeDescriptor.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RizpaStockExchangeDescriptor.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,98 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;all>
- *         &lt;element ref="{}rse-stocks"/>
- *         &lt;element ref="{}rse-users"/>
- *       &lt;/all>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-
-})
-@XmlRootElement(name = "rizpa-stock-exchange-descriptor")
-public class RizpaStockExchangeDescriptor {
-
-    @XmlElement(name = "rse-stocks", required = true)
-    protected RseStocks rseStocks;
-    @XmlElement(name = "rse-users", required = true)
-    protected RseUsers rseUsers;
-
-    /**
-     * Gets the value of the rseStocks property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link RseStocks }
-     *     
-     */
-    public RseStocks getRseStocks() {
-        return rseStocks;
-    }
-
-    /**
-     * Sets the value of the rseStocks property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link RseStocks }
-     *     
-     */
-    public void setRseStocks(RseStocks value) {
-        this.rseStocks = value;
-    }
-
-    /**
-     * Gets the value of the rseUsers property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link RseUsers }
-     *     
-     */
-    public RseUsers getRseUsers() {
-        return rseUsers;
-    }
-
-    /**
-     * Sets the value of the rseUsers property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link RseUsers }
-     *     
-     */
-    public void setRseUsers(RseUsers value) {
-        this.rseUsers = value;
-    }
-
-}
Index: SystemEngine/src/SystemEngine/User.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/User.java b/SystemEngine/src/SystemEngine/User.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/User.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,108 +0,0 @@
-package SystemEngine;
-
-import java.util.*;
-
-public class User {
-    private Map<String, StockPaper> stocksInBook = new HashMap<>();
-
-    public static void transact(User operator, User buyer, User seller, Transaction tr, String symbol) {
-
-    }
-
-    public void addPaper(String symbol, int idleQuantity) throws Exception {
-        stocksInBook.put(symbol, new StockPaper(0,idleQuantity));
-
-    }
-
-    public Map<String, StockPaper> getStocksInBook() {
-        return stocksInBook;
-    }
-
-
-    public boolean symbolExistsInBook(String symbol){
-            if (stocksInBook.containsKey(symbol))
-                return true;
-            else
-                return false;
-    }
-
-
-    public void removePaper(String symbol) {
-        stocksInBook.remove(symbol);
-    }
-
-    public StockPaper getPaper(String symbol) {
-        return stocksInBook.get(symbol);
-    }
-
-    public void updateUserNewInstruction(String symbol, int buyingQuantity){
-        stocksInBook.get(symbol).atMarket += buyingQuantity;
-    }
-
-    public void updateBuyer(String symbol, int incQuantity) {
-        StockPaper buyerStockPaper = stocksInBook.get(symbol);
-        if (buyerStockPaper == null) {
-            stocksInBook.put(symbol, new StockPaper(0, incQuantity));
-        }
-        buyerStockPaper.idle += incQuantity;
-    }
-
-    public void updateSeller(String symbol, int deduceQuantity){
-
-        StockPaper sellerStockPaper = stocksInBook.get(symbol);
-        sellerStockPaper.atMarket = sellerStockPaper.atMarket - deduceQuantity;
-       if (sellerStockPaper.atMarket + sellerStockPaper.idle == 0) {
-           removePaper(symbol);
-       }
-
-    }
-
-    public void updateUserAfterInsertingSaleInstruction(String symbol, Integer incValueToAtMarket){
-        stocksInBook.get(symbol).setAtMarket(stocksInBook.get(symbol).getAtMarket() + incValueToAtMarket);
-    }
-
-    public class StockPaper {
-        Integer atMarket = 0;
-        Integer idle = 0;
-
-        public int getTotalAmount(){return atMarket + idle; }
-        public StockPaper(int atMarket, int idle) {
-            this.idle = idle; //total has
-            this.atMarket = +atMarket; //sold atm at market
-            //this means inbag equals inpossetion - at market
-        }
-
-        public void updateThisAfterBought(int quantityTraded) {
-            idle += quantityTraded;
-        }
-
-        public void updateAfterSold(int quantityTraded, String symbol) {
-            atMarket -= quantityTraded;
-            if (idle+atMarket == 0 ){
-                removePaper(symbol);
-            }
-        }
-
-        public Integer getAtMarket() {
-            return atMarket;
-        }
-
-        public void setAtMarket(int atMarket) {
-            this.atMarket = atMarket;
-        }
-
-        public Integer getIdle() {
-            return idle;
-        }
-
-        public void setIdle(int idle) {
-            this.idle = idle;
-        }
-
-        public void updateStock(int quantity) {
-
-        }
-    }
-}
-
-
Index: SystemEngine/src/SystemEngine/Instruction/Instruction.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Instruction/Instruction.java b/SystemEngine/src/SystemEngine/Instruction/Instruction.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Instruction/Instruction.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,140 +0,0 @@
-package SystemEngine.Instruction;
-
-import SystemEngine.Exceptions.NullPriceException;
-import SystemEngine.Exceptions.NullQuantityException;
-import SystemEngine.Stock;
-import SystemEngine.Transaction;
-
-import java.io.Serializable;
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-import java.util.Objects;
-
-
-public abstract class Instruction implements Serializable, Comparable {
-
-    public abstract void buyStocks();
-
-    public abstract void sellStocks();
-
-    public void setQuantity(int _quantity) {
-        quantity = _quantity;
-    }
-
-    public void reduceQuantity(int amount) {
-        quantity -= amount;
-    }
-
-    public int getQuantity() {
-        return quantity;
-    }
-
-    public LocalDateTime getDate() {
-        return time;
-    }
-
-    public int getCycle() {
-        return price*quantity;
-    }
-
-    public int getPrice() {
-        return price;
-    }
-
-    public boolean isBuy(){return isBuy;}
-
-    @Override
-    public boolean equals(Object o) {
-        if (this == o) return true;
-        if (o == null || getClass() != o.getClass()) return false;
-        Instruction that = (Instruction) o;
-        return quantity == that.quantity && price == that.price &&  isBuy == that.isBuy && isNew == that.isNew && Objects.equals(time, that.time);
-    }
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(quantity, time, price, isBuy, isNew);
-    }
-
-
-    @Override
-    public String toString() {
-
-//        return "SystemEngine.Instruction.Instruction{" +
-//                "quantity=" + quantity +
-//                ", date='" + date + '\'' +
-//                ", price=" + price +
-//                ", cycle=" + cycle +
-//                ", instructionComplete=" + instructionComplete +
-//                ", relationsWithInvoker=" + relationsWithInvoker +
-//                '}';
-        return "| " + time.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "| " + price + "| " + quantity + "| ";// + price*quantity + "|";
-    }
-
-    protected int quantity;
-    protected LocalDateTime time;
-    protected int price = 0;
-    protected boolean isBuy;
-    protected boolean isNew = true;
-    protected String operatorName;
-
-    public abstract Transaction operateStock(Instruction newBuyInstruction);
-
-    public abstract boolean matchesOppositeInstruction(Instruction newBuyInstruction);
-    public abstract void prepareAddingRemainderToInstructionList(Stock addedTo);
-
-    public boolean checkIfNew (){return isNew;}
-
-    public void setIsNew(boolean b) {
-        isNew = b;
-    }
-
-    public String getOperatorName(){return operatorName; }
-    Instruction(LocalDateTime time, boolean isBuy, int price, int quantity, String operatorName) throws Exception {
-        this.time = time;
-        this.isBuy = isBuy;
-        this.price = price;
-        this.quantity = quantity;
-        this.operatorName = operatorName;
-        this.checkLegalInstruction();
-
-    }
-
-    private void checkLegalInstruction() throws Exception {
-            if (price == 0)  throw new NullPriceException("Illegal operation:\nThe price cannot be zero.");
-
-            if (quantity == 0) throw new NullQuantityException("You cannot operateStock with the quantity of 0. u nuts?");
-
-            if (price < 0) {
-                throw new IllegalArgumentException("Price cannot be negative!");
-            }
-            if (quantity < 0) {
-                throw new IllegalArgumentException("Quantity cannot be negative!");
-            }
-    }
-
-    public String getInvokersName(){return operatorName;}
-
-    protected void setPrice(int price) {
-        this.price = price;
-    }
-    final int NOT_INIT = 0;
-
-
-
-    @Override
-    public int compareTo(Object o1) {
-//
-        LMT otherIns = ((LMT) o1);
-        int priceSub = this.price - otherIns.price;
-        if (price == otherIns.price && !this.equals(otherIns)){
-            int res = time.compareTo(otherIns.time);
-            return res;
-        } else if (this.isBuy == true)
-            return -priceSub;
-        else
-            return priceSub;
-
-
-    }
-}
Index: SystemEngine/src/SystemEngine/MarketManager.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/MarketManager.java b/SystemEngine/src/SystemEngine/MarketManager.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/MarketManager.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,432 +0,0 @@
-package SystemEngine;
-
-
-import DTO.*;
-import SystemEngine.Exceptions.UniqueException;
-import SystemEngine.Instruction.Instruction;
-import SystemEngine.Instruction.LMT;
-import SystemEngine.Instruction.MKT;
-import SystemEngine.generated.*;
-import appControl.ApplicationControl;
-
-import javax.xml.bind.JAXBContext;
-import javax.xml.bind.Unmarshaller;
-import java.io.*;
-import java.time.LocalDateTime;
-import java.util.*;
-import java.util.concurrent.TimeUnit;
-
-public class MarketManager implements StocksTradeSystem {
-
-    private boolean x;
-
-
-    //@Override
-    public CMD4ReturnBundle operateOnMarket1(InstructionDTO newInstructionDTO, String enteredSymbol) throws Exception {
-        //some invalid user inputs
-
-        Instruction newInstruction = createInstructionFromDTO(newInstructionDTO);
-        Stock searchedStock = stocks.get(enteredSymbol);
-        CMD4ReturnBundle result = null;
-
-        if (searchedStock != null) {
-            result = operateOnMarket2(searchedStock, newInstruction, enteredSymbol);
-        }
-        else {
-             throw new Exception("Couldn't find the required stock.");
-            }
-        return result;
-    }
-
-    //, Collection<Instruction> sameType, Collection<Instruction> oppositeType
-    private CMD4ReturnBundle operateOnMarket2(Stock searchedStock, Instruction newInstruction, String searchedStockSymbol) {
-
-        User instructionOperator = users.get(newInstruction.getOperatorName());
-
-        //defaults to sell
-        Collection<Instruction> sameTypeCollection = searchedStock.getSaleInstructionData();
-        Collection<Instruction> oppositeInstructionCollection = searchedStock.getBuyInstructionData();
-        LinkedList<Transaction> transactionsMade = new LinkedList();
-        //if buy
-        if (newInstruction.isBuy()) {
-            sameTypeCollection = searchedStock.getBuyInstructionData();
-            oppositeInstructionCollection = searchedStock.getSaleInstructionData();
-        }
-
-        int totalGetTotalOperations = 0;
-        for (Instruction oppositeInstruction : oppositeInstructionCollection) {
-            if (!newInstruction.getOperatorName().equals(oppositeInstruction.getOperatorName())) {
-                if (newInstruction.matchesOppositeInstruction(newInstruction)) {
-
-                    Transaction tr = newInstruction.operateStock(oppositeInstruction);
-                    searchedStock.getTransactionList().push(tr);
-                    transactionsMade.push(tr);
-                    searchedStock.updateStock(tr.getQuantity(), tr.getPrice(), tr.getTotalPayment());
-                    totalGetTotalOperations += tr.getQuantity();
-                    User buyer = users.get(tr.getBuyersName());
-                    User seller = users.get(tr.getSellersName());
-
-                    int quantityTraded = tr.getQuantity();
-
-                    buyer.updateBuyer(searchedStockSymbol, quantityTraded);
-
-
-                    if (seller.equals(instructionOperator)){
-                        seller.updateSeller(searchedStockSymbol, 0); //should remove paper incase 0 remain
-                    }
-                    else{
-                        seller.updateSeller(searchedStockSymbol, quantityTraded); //should remove paper incase 0 remain
-                    }
-                    if (oppositeInstruction.getQuantity() == 0) {
-                        oppositeInstructionCollection.remove(oppositeInstruction);
-                    }
-                    if (newInstruction.getQuantity() == 0) {
-                        break;
-                    }
-                }
-            }
-        }
-
-        if (newInstruction.getQuantity() > 0) {
-            if (!newInstruction.isBuy()) {
-                instructionOperator.updateUserAfterInsertingSaleInstruction(searchedStockSymbol, newInstruction.getQuantity());
-            }
-            sameTypeCollection.add(newInstruction);
-        }
-        if (transactionsMade.size() == 0){
-            transactionsMade = null;
-        }
-        if (newInstruction.getQuantity() ==0){
-            newInstruction = null;
-        }
-        return new CMD4ReturnBundle(transactionsMade, newInstruction);
-    }
-
-
-    private void updateUserInstructionCase(String searchedStockSymbol, int quantity) {
-    }
-
-
-
-
-//    private void updateUser(User operator, User buyer, User seller, Transaction tr, String symbol) {
-//        User.transact( operator,  buyer,  seller,  tr,  symbol);
-//
-//    }
-    //public CMD4ReturnBundle operateOnMarket1(Instruction newInstruction, String operatorsName, String enteredSymbol) throws Exception {
-
-//    public CMD4ReturnBundle operateOnMarket1(InstructionDTO newInstructionDTO, String enteredSymbol) throws Exception {
-//        String operatorName = newInstructionDTO.getOperatorName();
-//
-////        if (!newInstructionDTO.getIsBuy()) { //if sell command
-////           if( getUser(operatorName).getStocksInBook().get(enteredSymbol) < newInstructionDTO.getQuantity()){
-////               throw new IllegalArgumentException("The user: " + operatorName + " owns only" + getUser(operatorName).getStocksInBook().get(enteredSymbol) + "" +
-////                       "stocks. and does not have the requested(" + newInstructionDTO.getQuantity() + ") amount of these stocks.");
-////            }
-////        }
-//        Stock searchedCompany = stocks.get(enteredSymbol);
-//        Instruction newInstruction = createInstructionFromDTO(newInstructionDTO);
-//        CMD4ReturnBundle retVal;
-//        if (searchedCompany != null) {
-//            if (newInstruction.isBuy()) {
-//                retVal = searchedCompany.operate(this, newInstruction, searchedCompany.getBuyInstructionData(), searchedCompany.getSaleInstructionData());
-//            } else {
-//                retVal = searchedCompany.perate(newInstruction, searchedCompany.getSaleInstructionData(), searchedCompany.getBuyInstructionData());
-//            }
-//            updateUsers(retVal, enteredSymbol, newInstruction);
-//            return retVal;
-//        }
-//        else{
-//            throw new IllegalArgumentException("The symbol you've entered does not exists within the system!\n" + "Going back to menu...");
-//
-//        }
-//    }
-    //assumes userName always exists
-    //Do exception if not found
-    public UserDTO getSafeUser(String operatorName) {
-        for(String userName: users.keySet()){
-            if (userName.equals(operatorName))
-                return new UserDTO(users.get(userName), this);
-        }
-        return null;
-    }
-
-    public User getUser(String operatorName) {
-        for(String userName: users.keySet()){
-            if (userName.equals(operatorName))
-                return users.get(userName);
-        }
-        return null;
-    }
-
-    private Instruction createInstructionFromDTO(InstructionDTO newInstructionDTO) throws Exception {
-        Instruction createdInstruction;
-        if (newInstructionDTO.getInstructionType().equals("LMT")) {
-            createdInstruction = new LMT(newInstructionDTO.getTime(), newInstructionDTO.getIsBuy(), newInstructionDTO.getPrice(), newInstructionDTO.getQuantity(), newInstructionDTO.getOperatorName());
-        } else { //it's MKT
-            createdInstruction = new MKT(newInstructionDTO.getTime(), newInstructionDTO.getIsBuy(), newInstructionDTO.getQuantity(), newInstructionDTO.getOperatorName());
-        }
-        return createdInstruction;
-    }
-
-    //this is always legal, throws b4 if not
-//    private void updateUsers(CMD4ReturnBundle bundle, String symbol, Instruction newInstruction) throws Exception {
-//        int totalQuantityOperated = 0;
-//
-//
-//        for (TransactionDTO tr : bundle.getTransactionsMade()) {
-//
-//            User buyingUser = users.get(tr.getBuyerName());
-//            User sellingUser = users.get(tr.getSellerName());
-//
-//            int quantityTraded = tr.getQuantity();
-//
-//                buyingUser.updateBuyer(symbol, quantityTraded);
-//                sellingUser.getPaper(symbol).updateAfterSold(quantityTraded, symbol); //removes the paper if sold out
-//            } else
-//                {
-//                buyingUser.getPaper(symbol).updateAfterBought(quantityTraded);
-//                sellingUser.getPaper(symbol).updateAfterSold(quantityTraded, symbol); //removes the paper if sold out
-//            }
-//        }
-//        }
-
-//                    quantityTraded = -quantityTraded; }
-//                int newQuantity = users.get(invokersName).getQuantity(symbol) + quantityTraded;
-//                users.get(invokersName).setQuantity(symbol, newQuantity);
-//
-//                User invokingUser = users.get(invokersName);
-//                if (invokingUser.getStocksInBook().get(symbol).equals(0)){
-//                    users.get(invokersName).removePaper(symbol);
-//                }
-
-//                totalQuantityOperated += quantityTraded;
-//                //delete 0 values
-//            }
-//
-//        String operatorsName = newInstruction.getInvokersName();
-
-//        users.get(operatorsName).setQuantity(symbol, users.get(operatorsName).getQuantity(symbol) + totalQuantityOperated);
-
-
-
-
-    public Instruction createMatchingInstruction(String instructionType, LocalDateTime time, boolean isBuy, String symbol, int price, int quantity, String operatorName) throws Exception {
-        if (instructionType.equals(caseLMT))
-            return new LMT(time, isBuy, price, quantity, operatorName);
-        else if (instructionType.equals(caseMKT)) {
-
-//            return setAndRetMKT(new MKT(time, isBuy, quantity), symbol); //if no found sets price to NOT_INIT(0)
-            return new MKT(time, isBuy, quantity, operatorName);
-        } else {
-            throw new UnsupportedOperationException("You've entered " + instructionType + "Which is an unknown input to the program, please try again");
-        }
-    }
-
-    //returns index of company by symbol. also knows to return NOT_FOUND
-    public StockDTO getSafeStock(String symbol) throws IllegalArgumentException {
-        if (stocks.containsKey(symbol)) {
-            return new StockDTO(stocks.get(symbol));
-        }
-        else
-            throw new IllegalArgumentException("The symbol you've entered does not exists within the system!\n" + "Going back to menu...");
-    }
-
-
-    @Override
-    public boolean userExist(String userName){
-        return users.get(userName) != null;
-    }
-
-    @Override
-    public int getUserTotalVal(String userName) throws Exception {
-        int sum = 0;
-       User user = users.get(userName);
-       for (String symbol: user.getStocksInBook().keySet()){
-           sum = (stocks.get(symbol).getPrice() * users.get(userName).getStocksInBook().get(symbol).getTotalAmount()) + sum;
-       }
-       return sum;
-    }
-
-    public int getQuantityOfStockByUser(String userName, String symbol) throws Exception {
-        return users.get(userName).getPaper(symbol).getTotalAmount();
-    }
-
-
-
-    public Map<String, StockDTO> getSafeStocks() {
-        return new MarketDTO(stocks).getSafeStocks();
-    }
-
-
-    public void prepNextAction() throws InterruptedException {
-
-        for (Stock stock : stocks.values()) {
-            stock.clearCache();
-        }
-        for (Stock stock : stocks.values()) {
-            for (Transaction tr : stock.getTransactionList())
-                tr.setIsNew(false);
-        }
-        TimeUnit.MILLISECONDS.sleep(1);
-    }
-
-    @Override
-    public Map<String, User> getUsers() {
-       return users;
-    }
-
-
-
-    @Override
-    public void checkLegalSymbol(String symbol, String userName) throws Exception {
-        if (stocks.get(symbol) == null){
-            throw new Exception("ERROR!\nThe entered symbol: " + symbol + " doesn't exist!");
-
-        }
-        if (!(users.get(userName).symbolExistsInBook(symbol))) {
-            throw new Exception("ERROR!\nThe user: " + userName + " doesn't own stock: " + symbol);
-        }
-    }
-
-    //would be nicer if this returned boolean
-    public boolean loadXML(String xmlFileName) throws Exception {
-        File file = new File(xmlFileName);
-        InputStream inputStream = new FileInputStream(new File(xmlFileName)); //read from user
-
-        JAXBContext jc = JAXBContext.newInstance(JAXB_MARKET_PACKAGE_NAME);
-        Unmarshaller u = jc.createUnmarshaller();
-        RizpaStockExchangeDescriptor marketUnref = (RizpaStockExchangeDescriptor) u.unmarshal(inputStream);
-
-        RseStocks companiesUnref = marketUnref.getRseStocks();
-        stocks.putAll(translateRseStocks(companiesUnref));
-        RseUsers usersUnref = marketUnref.getRseUsers();
-        users.putAll(translateRseUsers(usersUnref));
-        return true;
-    }
-
-    public Map<String, User> translateRseUsers(RseUsers fromStocks) throws Exception {
-
-        List<RseUser> xmlUsers = fromStocks.getRseUser();
-        Map<String, User> newConvertedUsers = new HashMap<>(); //name
-        for (RseUser user : xmlUsers) {
-            User newUser = new User();
-            if (newConvertedUsers.get(user.getName()) == null) {
-
-                for (RseItem item : user.getRseHoldings().getRseItem()) {
-                    if (stocks.containsKey(item.getSymbol())) { //cannot add papers yet
-                        newUser.addPaper(item.getSymbol(), item.getQuantity());
-                    } else
-                        throw new Exception("Error! the user " + user.getName() + "contains the symbol: " + item.getSymbol() + "which is unknown to the system."); //make ExceptionSymbolNotFound
-                }
-                newConvertedUsers.put(user.getName(), newUser);
-            }
-            else { throw new UniqueException("User Name", user.getName()); }
-
-        }
-        return newConvertedUsers;
-    }
-
-    public Map<String, Stock> translateRseStocks(RseStocks fromStocks) throws Exception {
-        List<RseStock> xmlStocks = fromStocks.getRseStock();
-        Map<String, Stock> dataToBeChecked = new HashMap<>();
-        for (RseStock stock : xmlStocks) {
-            Stock addedStock = new Stock(stock.getRseCompanyName(), stock.getRsePrice()); //throws if not by format of name, symbol or price., toUpper was instructed by Aviad.
-            checkDoubles(dataToBeChecked, stock);
-
-            if (dataToBeChecked.containsKey(stock.getRseSymbol()))
-                throw new UniqueException("Symbol", stock.getRseSymbol());
-            dataToBeChecked.put(stock.getRseSymbol(), addedStock);
-        }
-        return dataToBeChecked;
-    }
-
-    private void checkDoubles(Map<String, Stock> dataArr, RseStock newData) throws UniqueException {
-
-        for (Stock stockInArr : dataArr.values()) {
-            if (stockInArr.getCompanyName().equals(newData.getRseCompanyName()))
-                throw new UniqueException("company's name", stockInArr.getCompanyName());
-        }
-    }
-
-    public void readStocksFromFile(String readFileName) throws IOException, ClassNotFoundException {
-        try (ObjectInputStream in =
-                     new ObjectInputStream(
-                             new FileInputStream(readFileName))) {
-           stocks =
-                    (Map<String, Stock>) in.readObject();
-        }
-    }
-    public void writeStocksToFile(String fileName) throws IOException {
-
-        File file = new File(fileName);
-        try (ObjectOutputStream out =
-                     new ObjectOutputStream(
-                             new FileOutputStream(fileName))) {
-
-            out.writeObject(stocks);
-            out.flush();
-        }
-    }
-
-    public void cleanStocks() {
-        stocks.clear();
-    }
-
-    @Override
-    public void cleanUsers() { users.clear();  }
-
-
-    public void checkLegalQuantity(int quantity, String userName, String symbol, boolean isBuy) throws Exception {
-        if (quantity <= 0){
-            throw new IllegalArgumentException("quantity must be a positive number. " + "price entered: " + quantity);
-        }
-        if (!isBuy) {
-            int stockOwnedByUserOfGivenSymbol = users.get(userName).getPaper(symbol).getTotalAmount();
-                if (stockOwnedByUserOfGivenSymbol < quantity) {
-                    throw new IllegalArgumentException("The user: " + userName + " has asked to sell: " +
-                            quantity + " stocks of Symbol: " + symbol + ".But has only: " + stockOwnedByUserOfGivenSymbol + " in possetion."); //make insufficient stocks exception
-                }
-        }
-    }
-
-    public void checkLegalPrice(int price) throws IllegalArgumentException {
-        if (price < 0){
-            throw new IllegalArgumentException("A stock's price must a none-negative number. " + "price entered: " + price);
-        }
-    }
-
-
-
-    public void checkLegalInstructionType(String instructionType) throws UnsupportedOperationException {
-        if (!instructionType.equals(caseLMT) && !instructionType.equals(caseMKT)) {
-            throw new UnsupportedOperationException("Rizpa only supports LMT and MKT commands for now." + "Instruction entered:" + instructionType);
-        }
-    }
-
-
-    final static String JAXB_MARKET_PACKAGE_NAME = "SystemEngine.generated";
-
-    private Map<String, Stock> stocks = new HashMap<>();
-    private Map<String, User> users = new HashMap<>();
-
-
-    final String caseLMT = "1";
-    final String caseMKT = "2";
-
-    public void loadDataForTesting() throws Exception {
-
-        Stock stock1 = new Stock("Google", 100);
-
-    }
-
-
-    final static String readFrom = "SystemEngine/src/resources/readFile.dat";
-    final static String writeTo = "SystemEngine/src/resources/readFile.dat";
-    final static String XML_FILE_NAME1 = "C:\\Users\\Z490\\IdeaProjects\\RSE_PT1\\SystemEngine\\src\\resources\\ex2-small.xml"; //C:/Users/Z490/RSE/
-    final static String XML_FILE_NAME2 = "C:\\Users\\Z490\\IdeaProjects\\RSE_PT1\\SystemEngine\\src\\resources\\ex2-error-2.1.xml"; //C:/Users/Z490/RSE/
-    final static String XML_FILE_NAME3 = "C:\\Users\\Z490\\IdeaProjects\\RSE_PT1\\SystemEngine\\src\\resources\\ex2-error-2.2.xml"; //C:/Users/Z490/RSE/
-
-
-}
-
Index: SystemEngine/src/resources/ex2-error-2.2.xml
===================================================================
diff --git a/SystemEngine/src/resources/ex2-error-2.2.xml b/SystemEngine/src/resources/ex2-error-2.2.xml
deleted file mode 100644
--- a/SystemEngine/src/resources/ex2-error-2.2.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,46 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<rizpa-stock-exchange-descriptor xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="RSE-V2.xsd">
-	<rse-stocks>
-		<rse-stock>
-			<rse-symbol>GOOGL</rse-symbol>
-			<rse-company-name>Google</rse-company-name>
-			<rse-price>100</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>AAPL</rse-symbol>
-			<rse-company-name>Apple</rse-company-name>
-			<rse-price>75</rse-price>
-		</rse-stock>				
-		<rse-stock>
-			<rse-symbol>MSFT</rse-symbol>
-			<rse-company-name>Microsoft</rse-company-name>
-			<rse-price>175</rse-price>
-		</rse-stock>						
-		<rse-stock>
-			<rse-symbol>ZM</rse-symbol>
-			<rse-company-name>Zoom</rse-company-name>
-			<rse-price>25</rse-price>
-		</rse-stock>				
-	</rse-stocks>
-	<rse-users>
-		<rse-user name="menash">			
-			<rse-holdings>
-				<rse-item symbol="MSFT" quantity="50"/>
-				<rse-item symbol="AMZN" quantity="150"/>
-				<rse-item symbol="ZM" quantity="550"/>
-			</rse-holdings>						
-		</rse-user>
-		<rse-user name="tikva">			
-			<rse-holdings>
-				<rse-item symbol="GOOGL" quantity="250"/>
-			</rse-holdings>
-		</rse-user>
-		<rse-user name="avrum">			
-			<rse-holdings>
-				<rse-item symbol="AAPL" quantity="100"/>
-				<rse-item symbol="MSFT" quantity="200"/>
-				<rse-item symbol="GOOGL" quantity="300"/>
-			</rse-holdings>
-		</rse-user>
-	</rse-users>
-</rizpa-stock-exchange-descriptor>
Index: JavaFXapp/JavaFXapp.iml
===================================================================
diff --git a/JavaFXapp/JavaFXapp.iml b/JavaFXapp/JavaFXapp.iml
deleted file mode 100644
--- a/JavaFXapp/JavaFXapp.iml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <excludeFolder url="file://$MODULE_DIR$/src/Components" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module" module-name="DTO" />
-    <orderEntry type="module" module-name="SystemEngine" />
-  </component>
-</module>
\ No newline at end of file
Index: SystemEngine/src/resources/market.xsd
===================================================================
diff --git a/SystemEngine/src/resources/market.xsd b/SystemEngine/src/resources/market.xsd
deleted file mode 100644
--- a/SystemEngine/src/resources/market.xsd	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by mazuki (darksiderg) -->
-<!--W3C Schema generated by XMLSpy v2008 rel. 2 (http://www.altova.com)-->
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
-	<xs:element name="rse-symbol" type="xs:string"/>
-	<xs:element name="rse-stocks">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element ref="rse-stock" maxOccurs="unbounded"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-stock">
-		<xs:complexType>
-			<xs:all>
-				<xs:element ref="rse-symbol"/>
-				<xs:element ref="rse-company-name"/>
-				<xs:element ref="rse-price"/>
-			</xs:all>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-price" type="xs:int"/>
-	<xs:element name="rse-company-name" type="xs:string"/>
-	<xs:element name="rizpa-stock-exchange-descriptor">
-		<xs:complexType>
-			<xs:all>
-				<xs:element ref="rse-stocks"/>
-			</xs:all>
-		</xs:complexType>
-	</xs:element>
-</xs:schema>
Index: JavaFXapp/src/appControl/MenuAction.java
===================================================================
diff --git a/JavaFXapp/src/appControl/MenuAction.java b/JavaFXapp/src/appControl/MenuAction.java
deleted file mode 100644
--- a/JavaFXapp/src/appControl/MenuAction.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,120 +0,0 @@
-package appControl;
-
-import DTO.CMD4ReturnBundle;
-import DTO.InstructionDTO;
-import DTO.StockDTO;
-import SystemEngine.Instruction.Instruction;
-import SystemEngine.StocksTradeSystem;
-import appControl.ApplicationControl;
-import javafx.application.Application;
-
-import java.io.IOException;
-
-
-import static java.lang.Integer.getInteger;
-import static java.lang.Integer.parseInt;
-
-public enum MenuAction {
-    LOAD(){
-        @Override
-        public void execute() throws Exception {
-        }
-
-    },
-    SHOW_SPECIFIC_STOCKS() {
-        @Override
-        public void execute() throws Exception {
-
-        }
-    },
-
-    BUY_OR_SELL(){
-        @Override
-        public void execute() throws Exception {
-
-
-        }
-    },
-
-
-    SERIALIZE(){
-        @Override
-        public void execute() throws IOException {
-//            System.out.println("Enter full path to (create)/(save to) dat file. Creates/Overwrites depending on if file already exists.");
-//            String address = loadedScanner.nextLine();
-//            savedPathToReadFrom = address;
-//            System.out.println("Saving...");
-//            marketInterface.writeStocksToFile(address);
-//            System.out.println("Success!");
-
-        }
-
-    },
-    DESERIALIZE(){
-        @Override
-        public void execute() throws IOException, ClassNotFoundException {
-
-//            if (savedPathToReadFrom != null) {
-//                System.out.println("Reading file from address: " + savedPathToReadFrom);
-//            }else {
-//                System.out.println("You need to save the file first in order to do that.");
-//                return;
-//            }
-//
-//            System.out.println("Reading from saved file...");
-//            marketInterface.readStocksFromFile();
-//            systemLoaded = true;
-//            System.out.println("Reading successful!");
-        }
-
-
-    };
-
-
-    static ApplicationControl applicationControl;
-
-    public static void setApplicationControl(ApplicationControl applicationControl){    MenuAction.applicationControl = applicationControl;}
-    static StocksTradeSystem marketManager;
-    public static void setMarketManager(StocksTradeSystem marketManager){ MenuAction.marketManager = marketManager;}
-
-    public static MenuAction findAction(MenuAction currentAction) {
-        for(MenuAction menuAction : MenuAction.values()) {
-            if(menuAction.equals(currentAction))
-                return menuAction;
-        }
-        return null;
-    }
-
-
-    public abstract void execute() throws Exception;
-
-    final String XML = "1";
-    final String Manual = "1";
-    final String Automatic = "2";
-    final String TESTER = "2";
-
-    final String LOAD_ANS = "1";
-    final String SHOW_ALL_STOCKS_ANS = "2";
-    final String SHOW_SPECIFIC_STOCKS_ANS = "3";
-    final String BUY_OR_SELL_ANS = "4";
-    final String SHOW_ACTIVE_AUCTIONS_ANS = "5";
-    final String SERIALIZE_ANS = "6";
-    final String DE_SERIALIZE_ANS = "7";
-    final String QUIT_ANS = "8";
-
-    final String BUY_STOCKS = "1";
-    final String SELL_STOCKS = "2";
-    final String MAIN_MENU = "3";
-
-    final String MKT = "2";
-    final String NOT_INIT = "0";
-
-
-    static String savedPathToReadFrom = null;
-    final static String readFrom = "SystemEngine/src/resources/readFile.dat";
-    final static String writeTo = "SystemEngine/src/resources/readFile.dat";
-    final static String XML_FILE_NAME1 = "C:\\Users\\Z490\\IdeaProjects\\RSE_PT1\\SystemEngine\\src\\resources\\ex1-small.xml"; //C:/Users/Z490/RSE/
-    final static String XML_FILE_NAME2 = "SystemEngine/src/resources/ex1-error-3.2.xml"; //C:/Users/Z490/RSE/
-    final static String XML_FILE_NAME3 = "SystemEngine/src/resources/ex1-error-3.3.xml"; //C:/Users/Z490/RSE/
-
-}
\ No newline at end of file
Index: DTO/src/DTO/UserDTO.java
===================================================================
diff --git a/DTO/src/DTO/UserDTO.java b/DTO/src/DTO/UserDTO.java
deleted file mode 100644
--- a/DTO/src/DTO/UserDTO.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,99 +0,0 @@
-package DTO;
-
-import SystemEngine.StocksTradeSystem;
-import SystemEngine.User;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class UserDTO {
-
-    private final List<StockPaperDTO> stocksOwnedByUser;
-
-        public UserDTO(User user, StocksTradeSystem system) {
-            stocksOwnedByUser = new ArrayList<>();
-            for (String symbol :user.getStocksInBook().keySet()){
-                try {
-
-                    User.StockPaper stockPaper = user.getStocksInBook().get(symbol);
-
-                    Integer totalQuantity = new Integer(stockPaper.getIdle()+ stockPaper.getAtMarket());
-
-                    stocksOwnedByUser.add(new StockPaperDTO(system.getSafeStock(symbol).getPrice(),
-                            stockPaper.getAtMarket(),
-                            stockPaper.getIdle(),
-                            system.getSafeStock(symbol).getCompanyName(),
-                            symbol, totalQuantity));
-                } catch (Exception e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-
-
-    public List<StockPaperDTO> getOwnedStocks() {
-            return stocksOwnedByUser;
-    }
-
-    public class StockPaperDTO {
-        private  Integer totalQuantity;
-        private Integer atMarketQuantity;
-        private Integer currentPrice;
-        private Integer idleQuantity;
-        private String companyName;
-        private String symbol;
-
-
-        public void setIdleQuantity(Integer idleQuantity) { this.idleQuantity = idleQuantity; }
-        public void setAtMarketQuantity(Integer atMarketQuantity) { this.atMarketQuantity = atMarketQuantity; }
-
-
-
-
-        public int getTotalAmount(){return currentPrice+idleQuantity; }
-
-        public StockPaperDTO(Integer currentPrice, Integer atMarketQuantity, Integer idleQuantity, String companyName, String symbol, Integer totalQuantity) {
-            this.currentPrice = currentPrice;
-            this.atMarketQuantity = atMarketQuantity;
-            this.idleQuantity = idleQuantity;
-            this.companyName = companyName;
-            this.symbol = symbol;
-            this.totalQuantity = totalQuantity;
-        }
-
-        public Integer getIdleQuantity() {
-                return idleQuantity;
-            }
-        public Integer getAtMarketQuantity() {
-            return atMarketQuantity;
-        }
-
-        public String getSymbol() {
-                return symbol;
-            }
-
-        public Integer getCurrentPrice() {
-            return currentPrice;
-        }
-
-        public String getCompanyName() {
-            return companyName;
-        }
-
-        public void setCurrentPrice(Integer currentPrice) {
-            this.currentPrice = currentPrice;
-        }
-
-        public void setQuantity(Integer quantity) {
-            this.idleQuantity = quantity;
-        }
-
-        public void setCompanyName(String companyName) {
-            this.companyName = companyName;
-        }
-
-        public void setSymbol(String symbol) {
-            this.symbol = symbol;
-        }
-    }
-    }
Index: JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/stocksBookInputScreen.fxml
===================================================================
diff --git a/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/stocksBookInputScreen.fxml b/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/stocksBookInputScreen.fxml
deleted file mode 100644
--- a/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/stocksBookInputScreen.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,46 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.ChoiceBox?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.Separator?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-<AnchorPane fx:id="stocksBookController" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Components.inputScreen.stocksBookInputScreen.StocksBookInputScreenController">
-   <children>
-      <ScrollPane>
-         <content>
-            <VBox alignment="TOP_CENTER" prefHeight="400.0" prefWidth="270.0">
-               <children>
-                  <Label text="View Stocks" />
-                  <Separator prefWidth="200.0" />
-                  <TextArea fx:id="DebugTextSpace" prefHeight="139.0" prefWidth="245.0" text="Enter the searched stock name into the box&#10;blow (the search system is not key sensitive):&#10;&#10;by pressing enter the stock will be fetched.&#10;while in this tab you can repick names freely&#10;" />
-                  <VBox alignment="CENTER">
-                     <children>
-                        <Label text="Stock's symbol:" />
-                        <ChoiceBox fx:id="comboBoxLeftChooseStock" onMouseClicked="#requestLoadBook" prefWidth="150.0" />
-                     </children>
-                  </VBox>
-                  <HBox alignment="CENTER" prefHeight="32.0" prefWidth="245.0" spacing="4.0">
-                     <padding>
-                        <Insets bottom="4.0" left="4.0" right="4.0" top="4.0" />
-                     </padding>
-                     <VBox.margin>
-                        <Insets bottom="4.0" left="4.0" right="4.0" top="4.0" />
-                     </VBox.margin>
-                     <children>
-                        <Button fx:id="buttonSearchStock" mnemonicParsing="false" onAction="#loadStockPageRequested" text="Search Chosen Stock" />
-                     </children>
-                  </HBox>
-                  <Separator prefWidth="200.0" />
-               </children>
-            </VBox>
-         </content>
-      </ScrollPane>
-   </children>
-</AnchorPane>
Index: JavaFXapp/src/appControl/MessengerArchitect.java
===================================================================
diff --git a/JavaFXapp/src/appControl/MessengerArchitect.java b/JavaFXapp/src/appControl/MessengerArchitect.java
deleted file mode 100644
--- a/JavaFXapp/src/appControl/MessengerArchitect.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,89 +0,0 @@
-package appControl;
-
-import DTO.CMD4ReturnBundle;
-import DTO.InstructionDTO;
-import DTO.TransactionDTO;
-import javafx.beans.property.StringProperty;
-
-import java.time.format.DateTimeFormatter;
-import java.util.List;
-
-public class MessengerArchitect {
-    String matchingActionMSG(CMD4ReturnBundle bundle, boolean buySelected) {
-        //  boolean isBuy = isCurrentlyBuying();
-        String retMSG = "";
-        if (bundle.getInsDTO() == null) { //instruction wasn't made
-            if (buySelected) {
-                retMSG += "Perfect match found!\nSuccessfully acquired the full extent of the request. \n ";
-            } else {
-                retMSG += "Perfect match found!\nSuccessfully sold the full extent of the request. \n ";
-            }
-            retMSG += concatTransactions(bundle.getTransactionsMade());
-        }//theres an instruction
-        //case no transactions were made - added full instruction
-        else if (bundle.getTransactionsMade() == null)  //transactions were made
-        {
-            if (buySelected) {
-                retMSG += "There are no active sale instruction that matches with your request.\n";
-                retMSG += "The full  instruction has been added to the market. \n";
-            } else {
-                retMSG += "The full sale instruction that has been added to the market. \n";
-                retMSG += "There are no active instruction that matches with your request.\n";
-            }
-            retMSG += instructionTimePriceQuantity(bundle.getInsDTO()); //Do: doesn't print
-
-        }
-        //theres and instruction and at least some transactions
-        else { //new instruction and no transaction - no transaction has been made
-            if (buySelected) {
-                retMSG += "Partially match found!\nSuccessfully bought some of the request.\n";
-                retMSG += "\nThis partial updateBuyer instruction was been added to the market(the reminder after partially buying some of the stocks): \n";
-            } else {
-                retMSG += "Partially match found!\nSuccessfully sold some of the request.\n";
-                retMSG += "\nThis partial sale instruction was added to the market(the reminder after partially selling some of the stock): \n";
-            }
-            retMSG += concatTransactions(bundle.getTransactionsMade());
-            retMSG += instructionTimePriceQuantity(bundle.getInsDTO()); //Do: doesn't print
-        }
-        return retMSG;
-    }
-
-     public String instructionTimePriceQuantity(InstructionDTO ins) {
-        return "Time - " + ins.getTime().format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "\nPrice - " + ins.getPrice() +
-                " NIS\nQuantity - " + ins.getQuantity() + "\nFor a total price of:" + ins.getQuantity() * ins.getPrice() + " NIS";
-    }
-
-    public  String concatTransactions(List<TransactionDTO> transactionDTO) {
-        String addedRetMSG = "";
-        int index = 1;
-        System.out.println("Updated Transaction List - ");
-        if (transactionDTO.isEmpty()) {
-            System.out.println("There are no transactions in our archives.");
-        } else {
-            for (TransactionDTO tr : transactionDTO) {
-                addedRetMSG += stockHeaderFormat(index++) + presentingTransaction(tr);
-            }
-        }
-        return addedRetMSG;
-    }
-
-    public  String presentingTransaction(TransactionDTO tr) {
-        return "Time - " + tr.getTime().format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "\nPrice - " + tr.getPrice() +
-                "\nQuantity - " + tr.getQuantity() + "\nCycle - " + tr.getTotalPayment();
-    }
-
-    public  String stockHeaderFormat(int i) {
-        return "|~~~~~~~~~~~~~~~~~~~~" + (i) + "~~~~~~~~~~~~~~~~~~~~|\n";
-    }
-
-     public void updateTextProperty(StringProperty textUserInformationProperty, Exception e) {
-        textUserInformationProperty.setValue(e.getMessage());
-    }
-
-    public String openingMessage() {
-        return "Salutations!\n" +  "You've chosen to use RizpaMarketManager V2.15\n"
-                + "To begin, please load an XML data file by pressing the corresponding button at the top right.";
-    }
-
-
-}
Index: SystemEngine/src/SystemEngine/.idea/.gitignore
===================================================================
diff --git a/SystemEngine/src/SystemEngine/.idea/.gitignore b/SystemEngine/src/SystemEngine/.idea/.gitignore
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/.idea/.gitignore	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/../../../../../../../../../:\Users\Z490\IdeaProjects\RSE_PT1\SystemEngine\src\SystemEngine\.idea/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: JavaFXapp/src/usersTabPane/adminTab/AdminTabController.java
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/adminTab/AdminTabController.java b/JavaFXapp/src/usersTabPane/adminTab/AdminTabController.java
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/adminTab/AdminTabController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,183 +0,0 @@
-package usersTabPane.adminTab;
-
-import DTO.InstructionDTO;
-import DTO.StockDTO;
-import DTO.TransactionDTO;
-import SystemEngine.StocksTradeSystem;
-import appControl.ApplicationControl;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.collections.FXCollections;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.*;
-import javafx.scene.control.cell.PropertyValueFactory;
-
-import java.util.List;
-
-public class AdminTabController {
-
-    public AdminTabController(){
-        previousStockSymbol = new SimpleStringProperty();
-    }
-
-    public void initialize(){
-        comboBoxChooseStock2.promptTextProperty().bind(previousStockSymbol);
-    }
-
-    @FXML private ComboBox<String> comboBoxChooseStock2;
-    @FXML private TableView<TransactionDTO> tableViewTransactionBook;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTransactionPrice;
-    @FXML private TableColumn<TransactionDTO, Integer> tabTransactionQuantity;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionDate;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionOriginal;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionBuyer;
-    @FXML private TableColumn<TransactionDTO, String> tabTransactionSeller;
-
-    @FXML private TableView<InstructionDTO> tableViewSaleBook;
-    @FXML private TableColumn<InstructionDTO, Integer> tabSellPrice;
-    @FXML private TableColumn<InstructionDTO, Integer> tabSellQuantity;
-    @FXML private TableColumn<InstructionDTO, String> tabSellDate;
-    @FXML private TableColumn<InstructionDTO, String> tabSellOriginal;
-    @FXML
-    private TableColumn<InstructionDTO, String> tabSellTrader;
-
-
-    @FXML
-    private TableView<InstructionDTO> tableViewBuyBook;
-    @FXML
-    private TableColumn<InstructionDTO, Integer> tabBuyPrice;
-    @FXML
-    private TableColumn<InstructionDTO, Integer> tabBuyQuantity;
-    @FXML
-    private TableColumn<InstructionDTO, String> tabBuyDate;
-    @FXML
-    private TableColumn<InstructionDTO, String> tabBuyOriginal;
-    @FXML
-    private TableColumn<InstructionDTO, String> tabBuyTrader;
-
-    @FXML
-    private TableView<ApplicationControl.UserAction> tableActionsHistory;
-    @FXML
-    private TableColumn<ApplicationControl.UserAction, Integer> colHistoryActionNumber;
-    @FXML
-    private TableColumn<ApplicationControl.UserAction, String> colHistoryMessage;
-    @FXML
-    private TableColumn<ApplicationControl.UserAction, String> colHistoryTime;
-
-
-    @FXML
-//    void adminSearchStockListener(ActionEvent event) throws Exception {
-//try {
-//    String stockSymbol = comboBoxChooseStock2.getSelectionModel().getSelectedItem();
-//    if (applicationControl.systemBootFinish()) {
-//        if (stockSymbol != null)
-//            loadAdminStocks(applicationControl.getMarketManager(), stockSymbol, event);
-//        else {
-//            throw new Exception("Error: You'll have to choose a stock in the admin tab in order to view it's market.");
-//        }
-//    }
-//    else {
-//        throw new Exception("System unloaded Error: Please load the system first.");
-//    }
-//}
-//        catch (Exception e){
-//            applicationControl.throwMainApplication(e);
-//        }
-//    }
-    private SimpleStringProperty previousStockSymbol;
-    private void loadTransactionsBook(StockDTO stock) {
-        tabTransactionPrice.setCellValueFactory(new PropertyValueFactory<TransactionDTO, Integer>("price"));
-        tabTransactionQuantity.setCellValueFactory(new PropertyValueFactory<TransactionDTO, Integer>("quantity"));
-        tabTransactionDate.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("strTime"));
-        tabTransactionOriginal.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("instructionType"));
-        tabTransactionSeller.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("sellerName"));
-        tabTransactionBuyer.setCellValueFactory(new PropertyValueFactory<TransactionDTO, String>("buyerName"));
-        tableViewTransactionBook.getItems().setAll(FXCollections.observableArrayList(stock.getTransactionList()));
-
-    }
-
-    private void loadSaleBook(StockDTO stock) {
-        tabSellPrice.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("price"));
-        tabSellQuantity.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("quantity"));
-        tabSellDate.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("strTime"));
-        tabSellOriginal.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("instructionType"));
-        tabSellTrader.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("operatorName"));
-        tableViewSaleBook.getItems().setAll(FXCollections.observableArrayList(stock.getSaleList()));
-    }
-
-    private void loadBuyBook(StockDTO stock) {
-        tabBuyPrice.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("price"));
-        tabBuyQuantity.setCellValueFactory(new PropertyValueFactory<InstructionDTO, Integer>("quantity"));
-        tabBuyDate.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("strTime"));
-        tabBuyOriginal.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("instructionType"));
-        tabBuyTrader.setCellValueFactory(new PropertyValueFactory<InstructionDTO, String>("operatorName"));
-        tableViewBuyBook.getItems().setAll(FXCollections.observableArrayList(stock.getBuyList()));
-    }
-
-
-    private void loadHistoryBook(List<ApplicationControl.UserAction> historyLog) {
-        colHistoryActionNumber.setCellValueFactory(new PropertyValueFactory<ApplicationControl.UserAction, Integer>("actionNum"));
-        colHistoryMessage.setCellValueFactory(new PropertyValueFactory<ApplicationControl.UserAction, String>("details"));
-        colHistoryTime.setCellValueFactory(new PropertyValueFactory<ApplicationControl.UserAction, String>("strTime"));
-        tableActionsHistory.getItems().setAll(FXCollections.observableArrayList(historyLog));
-    }
-
-
-    private void setForm(StocksTradeSystem system) {
-        comboBoxChooseStock2.getItems().addAll(system.getSafeStocks().keySet());
-    }
-
-    public void setMainController(ApplicationControl applicationControl) {
-        this.applicationControl = applicationControl;
-    }
-
-    ApplicationControl applicationControl;
-
-    public String getOpenStock() {
-        String retOpenStockSymbol = null;
-        SelectionModel<String> selectedStockModel = comboBoxChooseStock2.getSelectionModel();
-        if (selectedStockModel != null){
-            retOpenStockSymbol = selectedStockModel.getSelectedItem();
-        }
-
-        return retOpenStockSymbol;
-    }
-
-//    public void setAdminSelectedStock(String openStock) {
-//        comboBoxChooseStock2.setSelectionModel(openStock);
-//    }
-
-    public SingleSelectionModel<String> getSelectionModelStock() {
-        return comboBoxChooseStock2.getSelectionModel();
-    }
-
-    public void setSymbolComboBox(String previousStockSymbol) {
-        this.previousStockSymbol.set(previousStockSymbol);
-    }
-
-    public void loadAdminStocks(StocksTradeSystem system, String currentlySelectedStock, ActionEvent event) throws Exception {
-        setForm(system);
-        if (currentlySelectedStock != null) {
-        StockDTO stock = system.getSafeStock(currentlySelectedStock);
-
-            for (String symbol : comboBoxChooseStock2.getItems()) {
-                if (symbol.equals(currentlySelectedStock)){
-                    setSymbolComboBox(currentlySelectedStock);
-                    loadTransactionsBook(stock);
-                    loadSaleBook(stock);
-                    loadBuyBook(stock);
-                    break;
-                }
-            }
-        }
-    }
-
-
-    public ComboBox<String> getSymbolCB() {
-        return comboBoxChooseStock2;
-    }
-
-    public void updateAdminLog() {
-        loadHistoryBook(applicationControl.getMyEventList());
-    }
-}
Index: JavaFXapp/src/Components/activeUsersScreen/ActiveUsersScreenControl.java
===================================================================
diff --git a/JavaFXapp/src/Components/activeUsersScreen/ActiveUsersScreenControl.java b/JavaFXapp/src/Components/activeUsersScreen/ActiveUsersScreenControl.java
deleted file mode 100644
--- a/JavaFXapp/src/Components/activeUsersScreen/ActiveUsersScreenControl.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,4 +0,0 @@
-package Components.activeUsersScreen;
-
-public class ActiveUsersScreenControl {
-}
Index: SystemEngine/src/SystemEngine/StocksTradeSystem.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/StocksTradeSystem.java b/SystemEngine/src/SystemEngine/StocksTradeSystem.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/StocksTradeSystem.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,61 +0,0 @@
-package SystemEngine;
-
-import DTO.*;
-import SystemEngine.Instruction.Instruction;
-import appControl.ApplicationControl;
-
-import java.io.IOException;
-import java.time.LocalDateTime;
-import java.util.List;
-import java.util.Map;
-
-public interface StocksTradeSystem {
-    public StockDTO getSafeStock(String symbol) throws Exception;
-
-    public Map<String, StockDTO> getSafeStocks();
-
-   // public CMD4ReturnBundle operateOnMarket1(InstructionDTO newInstructionDTO, String operatorsName, String enteredSymbol) throws Exception
-
-    //public CMD4ReturnBundle operateOnMarket1(Instruction newInstruction, String operatorsName, String enteredSymbol) throws Exception;
-
-    //public CMD4ReturnBundle operateOnMarket1(InstructionDTO newInstruction, String enteredSymbol) throws Exception;
-
-    public CMD4ReturnBundle operateOnMarket1(InstructionDTO newInstructionDTO, String enteredSymbol) throws Exception;
-
-
-    public UserDTO getSafeUser(String userName);
-
-    public Instruction createMatchingInstruction(String instructionType, LocalDateTime time, boolean isBuy, String symbol, int price, int quantity, String userName) throws Exception;
-
-    public int getQuantityOfStockByUser(String userName, String symbol) throws Exception;
-
-    public boolean userExist(String userName);
-
-    public int getUserTotalVal(String userName) throws Exception;
-
-    public boolean loadXML(String xmlFileName) throws Exception;
-
-    public void readStocksFromFile(String fileName) throws IOException, ClassNotFoundException;
-
-    public void writeStocksToFile(String fileName) throws IOException;
-
-    public void checkLegalQuantity(int quantity, String userName, String symbol, boolean isBuy) throws Exception;
-
-    public void checkLegalPrice(int price) throws Exception;
-
-    public void checkLegalInstructionType(String instructionType) throws Exception;
-
-    public void checkLegalSymbol(String symbol, String userName) throws Exception;
-
-    public void loadDataForTesting() throws Exception;
-
-    public void prepNextAction() throws InterruptedException;
-
-    public void cleanStocks();
-
-    public void cleanUsers();
-
-    public Map<String, User> getUsers();
-
-
-}
\ No newline at end of file
Index: JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab.fxml
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab.fxml b/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab.fxml
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.Separator?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.layout.ColumnConstraints?>
-<?import javafx.scene.layout.GridPane?>
-<?import javafx.scene.layout.RowConstraints?>
-<?import javafx.scene.layout.VBox?>
-
-<GridPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" xmlns:fx="http://javafx.com/fxml/1" xmlns="http://javafx.com/javafx/8.0.281">
-  <columnConstraints>
-    <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-      <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-      <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-      <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-    <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
-  </columnConstraints>
-  <rowConstraints>
-      <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-      <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-    <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-    <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-    <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
-  </rowConstraints>
-   <children>
-      <TableView prefHeight="200.0" prefWidth="200.0" GridPane.rowIndex="2">
-        <columns>
-          <TableColumn prefWidth="75.0" text="C1" />
-          <TableColumn prefWidth="75.0" text="C2" />
-        </columns>
-      </TableView>
-      <VBox>
-         <children>
-            <Label text="UserValue:" />
-            <Label text="Value here" />
-            <Separator prefWidth="200.0" />
-            <Label text="UserName:" />
-            <Label text="Name here" />
-         </children>
-      </VBox>
-      <Label text="Trade Form:" GridPane.columnIndex="3" />
-   </children>
-</GridPane>
Index: SystemEngine/src/SystemEngine/generated/RseStocks.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseStocks.java b/SystemEngine/src/SystemEngine/generated/RseStocks.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseStocks.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,78 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import java.util.ArrayList;
-import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element ref="{}rse-stock" maxOccurs="unbounded"/>
- *       &lt;/sequence>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-    "rseStock"
-})
-@XmlRootElement(name = "rse-stocks")
-public class RseStocks {
-
-    @XmlElement(name = "rse-stock", required = true)
-    protected List<RseStock> rseStock;
-
-    /**
-     * Gets the value of the rseStock property.
-     * 
-     * <p>
-     * This accessor method returns a reference to the live list,
-     * not a snapshot. Therefore any modification you make to the
-     * returned list will be present inside the JAXB object.
-     * This is why there is not a <CODE>set</CODE> method for the rseStock property.
-     * 
-     * <p>
-     * For example, to add a new item, do as follows:
-     * <pre>
-     *    getRseStock().add(newItem);
-     * </pre>
-     * 
-     * 
-     * <p>
-     * Objects of the following type(s) are allowed in the list
-     * {@link RseStock }
-     * 
-     * 
-     */
-    public List<RseStock> getRseStock() {
-        if (rseStock == null) {
-            rseStock = new ArrayList<RseStock>();
-        }
-        return this.rseStock;
-    }
-
-}
Index: JavaFXapp/src/Components/inputScreen/tradeInputScreen/tradeInputScreen.fxml
===================================================================
diff --git a/JavaFXapp/src/Components/inputScreen/tradeInputScreen/tradeInputScreen.fxml b/JavaFXapp/src/Components/inputScreen/tradeInputScreen/tradeInputScreen.fxml
deleted file mode 100644
--- a/JavaFXapp/src/Components/inputScreen/tradeInputScreen/tradeInputScreen.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,155 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.ComboBox?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ProgressBar?>
-<?import javafx.scene.control.RadioButton?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.Separator?>
-<?import javafx.scene.control.Slider?>
-<?import javafx.scene.control.SplitPane?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.control.ToggleGroup?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-<AnchorPane fx:id="anchorTradeControl" prefHeight="695.0" prefWidth="247.0" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Components.inputScreen.tradeInputScreen.TradeInputScreenController">
-   <children>
-      <SplitPane dividerPositions="0.5" orientation="VERTICAL" prefHeight="400.0" prefWidth="250.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-        <items>
-          <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="100.0" prefWidth="160.0">
-               <children>
-                  <ScrollPane layoutY="-30.0" prefWidth="220.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                     <content>
-                        <VBox alignment="CENTER">
-                           <children>
-                              <Label alignment="CENTER" text="Trade Menu" />
-                              <Separator prefWidth="200.0" />
-                              <VBox alignment="CENTER" prefHeight="42.0" prefWidth="255.0">
-                                 <children>
-                                    <Label text="Available users:" />
-                                    <ComboBox fx:id="comboBoxChooseOperator" onAction="#chooseOperatorListener" prefHeight="25.0" prefWidth="214.0" promptText="Or manually enter name here:" />
-                                 </children>
-                                 <opaqueInsets>
-                                    <Insets />
-                                 </opaqueInsets>
-                              </VBox>
-                              <VBox alignment="CENTER" prefHeight="401.0" prefWidth="250.0" spacing="3.0">
-                                 <children>
-                                    <Separator prefWidth="200.0" />
-                                    <Label text="User Name" />
-                                    <Separator prefWidth="200.0" />
-                                    <VBox>
-                                       <children>
-                                          <VBox alignment="CENTER">
-                                             <children>
-                                                <Label text="Choose Stock to operate on:" />
-                                                <ComboBox fx:id="comboBoxChooseStock" prefWidth="150.0" promptText="Enter Symbol here" />
-                                             </children>
-                                          </VBox>
-                                       </children>
-                                    </VBox>
-                                    <Separator prefWidth="200.0" />
-                                    <VBox alignment="CENTER">
-                                       <children>
-                                          <Label text="Choose Trade Direction" />
-                                          <HBox alignment="CENTER" prefHeight="29.0" prefWidth="600.0" spacing="5.0">
-                                             <children>
-                                                <RadioButton fx:id="RBBuyer" contentDisplay="CENTER" lineSpacing="5.0" mnemonicParsing="false" selected="true" text="Buyer">
-                                                   <toggleGroup>
-                                                      <ToggleGroup fx:id="tgTradeDirection" />
-                                                   </toggleGroup>
-                                                </RadioButton>
-                                                <RadioButton fx:id="RBSeller" contentDisplay="CENTER" mnemonicParsing="false" text="Seller" toggleGroup="$tgTradeDirection" />
-                                             </children>
-                                             <padding>
-                                                <Insets left="3.0" />
-                                             </padding>
-                                          </HBox>
-                                       </children>
-                                    </VBox>
-                                    <Separator prefWidth="200.0" />
-                                    <VBox alignment="CENTER">
-                                       <children>
-                                          <Label alignment="CENTER" prefHeight="17.0" prefWidth="375.0" text="Choose action: " />
-                                          <HBox alignment="CENTER" prefHeight="22.0" prefWidth="599.0">
-                                             <children>
-                                                <RadioButton fx:id="RBLMT" mnemonicParsing="false" selected="true" text="LMT">
-                                                   <toggleGroup>
-                                                      <ToggleGroup fx:id="tgInstructionType" />
-                                                   </toggleGroup>
-                                                </RadioButton>
-                                                <RadioButton fx:id="RBMKT" mnemonicParsing="false" text="MKT" toggleGroup="$tgInstructionType" />
-                                             </children>
-                                          </HBox>
-                                       </children>
-                                    </VBox>
-                                    <Separator prefWidth="200.0" />
-                                    <VBox alignment="CENTER" prefHeight="67.0" prefWidth="326.0">
-                                       <children>
-                                          <Label alignment="CENTER" text="Price Offer" />
-                                          <HBox alignment="CENTER_LEFT" prefHeight="36.0" prefWidth="372.0">
-                                             <children>
-                                                <Label prefHeight="17.0" prefWidth="152.0" text="Manually enter offer:" />
-                                                <TextField fx:id="textFieldUserOffer" text="0" />
-                                             </children>
-                                          </HBox>
-                                          <HBox alignment="CENTER_LEFT" prefHeight="28.0" prefWidth="372.0">
-                                             <children>
-                                                <Label text="Or via slider: " />
-                                                <Slider />
-                                             </children>
-                                          </HBox>
-                                       </children>
-                                    </VBox>
-                                    <Separator prefWidth="200.0" />
-                                    <VBox alignment="TOP_CENTER" prefHeight="400.0" prefWidth="326.0">
-                                       <children>
-                                          <Label alignment="CENTER" text="Quantity" />
-                                          <HBox alignment="CENTER_LEFT" prefHeight="36.0" prefWidth="372.0">
-                                             <children>
-                                                <Label text="Manually enter offer:" />
-                                                <TextField fx:id="textFieldUserQuantityText" text="0" />
-                                             </children>
-                                          </HBox>
-                                          <HBox alignment="CENTER_LEFT" prefHeight="28.0" prefWidth="372.0">
-                                             <children>
-                                                <Label text="Or via slider: " />
-                                                <Slider />
-                                             </children>
-                                          </HBox>
-                                       </children>
-                                    </VBox>
-                                 </children>
-                              </VBox>
-                           </children>
-                        </VBox>
-                     </content>
-                  </ScrollPane>
-               </children>
-            </AnchorPane>
-          <AnchorPane prefHeight="342.0" prefWidth="272.0">
-               <children>
-                  <ScrollPane prefHeight="342.0" prefWidth="268.0">
-                     <content>
-                        <VBox alignment="CENTER" prefHeight="338.0" prefWidth="267.0" spacing="3.0">
-                           <children>
-                              <Label alignment="CENTER" text="Progress And Validation" />
-                              <Label text="Active Status" />
-                              <TextArea prefHeight="117.0" prefWidth="267.0" text="red category - bad input&#10;Hovering with market over red-marked&#10;categories will supply more information.&#10;green cathegory - O.K&#10;If everything is O.K, you may press the &#10;button to proceed." />
-                              <Button fx:id="buttonCommitInstruction" mnemonicParsing="false" onAction="#userCommitsTradeInstructionListener" text="Commit Entered Instruction" />
-                              <ProgressBar progress="0.0" />
-                           </children>
-                        </VBox>
-                     </content>
-                  </ScrollPane>
-               </children>
-            </AnchorPane>
-        </items>
-      </SplitPane>
-   </children>
-</AnchorPane>
Index: JavaFXapp/src/Components/inputScreen/tradeInputScreen/TradeInputScreenController.java
===================================================================
diff --git a/JavaFXapp/src/Components/inputScreen/tradeInputScreen/TradeInputScreenController.java b/JavaFXapp/src/Components/inputScreen/tradeInputScreen/TradeInputScreenController.java
deleted file mode 100644
--- a/JavaFXapp/src/Components/inputScreen/tradeInputScreen/TradeInputScreenController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,145 +0,0 @@
-package Components.inputScreen.tradeInputScreen;
-
-import DTO.CMD4ReturnBundle;
-import DTO.InstructionDTO;
-import DTO.StockDTO;
-import SystemEngine.StocksTradeSystem;
-import appControl.ApplicationControl;
-import appControl.SubController;
-import javafx.collections.FXCollections;
-import javafx.collections.ObservableList;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.*;
-import javafx.scene.layout.AnchorPane;
-
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-
-public class TradeInputScreenController implements SubController {
-
-
-    @FXML private AnchorPane anchorTradeControl;
-    @FXML private ComboBox<String> comboBoxChooseOperator;
-    @FXML private ComboBox<String> comboBoxChooseStock;
-    @FXML private ToggleGroup tgTradeDirection;
-    @FXML private ToggleGroup tgInstructionType;
-    @FXML private TextField textFieldUserOffer;
-    @FXML private TextField textFieldUserQuantityText;
-    @FXML private Button buttonCommitInstruction;
-    @FXML private RadioButton RBBuyer;
-    @FXML private RadioButton RBSeller;
-    @FXML private RadioButton RBLMT;
-    @FXML private RadioButton RBMKT;
-
-
-    @FXML
-    void userCommitsTradeInstructionListener(ActionEvent event) throws Exception {
-        String symbol = comboBoxChooseStock.getSelectionModel().getSelectedItem();
-        StockDTO fetchedStock = marketManager.getSafeStock(symbol);
-        InstructionDTO newInstruction = gatherInstructionDTO();
-        //if everything is okay, commit.
-        appControl.TradeCommit();
-        CMD4ReturnBundle bundle =  marketManager.operateOnStocks(newInstruction, symbol);
-//        appControl.requestUpdateTradeOutput(bundle);
-//        appControl.requestUpdateStocksBook(symbol);
-    }
-
-    InstructionDTO gatherInstructionDTO() throws Exception {
-        InstructionDTO createdInstruction = new InstructionDTO();
-        //DO: if null\not found... paint red
-        createdInstruction.setBuy(RBBuyer.isSelected());
-        createdInstruction.setInstructionType(RBLMT.isSelected() ? RBLMT.getText() : RBMKT.getText());
-        LocalDateTime timeMark = LocalDateTime.now();
-        createdInstruction.setTime(timeMark);
-        createdInstruction.setStrTime(timeMark.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")));
-        System.out.println((textFieldUserOffer.getText()));
-        System.out.println((textFieldUserQuantityText.getText()));
-        createdInstruction.setPrice(Integer.parseInt(textFieldUserOffer.getText()));
-        createdInstruction.setQuantity(Integer.parseInt(textFieldUserQuantityText.getText()));
-        createdInstruction.setOperatorName(comboBoxChooseOperator.getSelectionModel().getSelectedItem());
-        return createdInstruction;
-    }
-//actionsBar.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
-//                    if((newValue.getText().equals(mainTabOpenStocksBook.getText()))) {
-//                        System.out.println("in main StocksBook tab");
-//                        try {
-//                            mainController.requestLoadUI(SubController.Type.STOCKS_BOOK);
-//                        } catch (IOException e) {
-//                            e.printStackTrace();
-//                        }
-//                    }
-
-        //if (tgTradeDirection.getSelectedToggle().toString())
-        //newInstruction.setOperatorName();
-        //marketManager.operateOnStocks()
-
-    // actionsBar.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -> {
-    //                    if((newValue.getText().equals(mainTabOpenStocksBook.getText()))) {
-
-    @FXML
-    void chooseOperatorListener(ActionEvent event) {
-
-    }
-
-    @FXML
-    void priceEnteredListener(ActionEvent event) {
-
-    }
-
-    @Override
-    public void setManager(StocksTradeSystem manager) {
-        this.marketManager = manager;
-    }
-
-    @Override
-    public void setMainController(ApplicationControl applicationController) {
-        this.appControl = applicationController;
-    }
-
-    @Override
-    public void submitData() {
-        comboBoxChooseOperator.getItems().addAll(marketManager.getUsers().keySet());
-        comboBoxChooseStock.getItems().addAll(marketManager.getSafeStocks().keySet());
-    }
-
-
-
-    //@Override
-
-    public void initialize(){
-
-
-       //comboBoxChooseOperator.getItems(FXCollections.observableSet(marketManager.getUsers().keySet()));
-   }
-
-    public ObservableList<InstructionDTO> getProduct(StockDTO stock) {
-
-        try {
-
-
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-        ObservableList<InstructionDTO> products = FXCollections.observableArrayList(stock.getBuyList());
-
-
-        return products;
-    }
-
-    StocksTradeSystem marketManager;
-    ApplicationControl appControl;
-
-    public boolean isCurrentlyBuying() {
-        return RBBuyer.isSelected();
-    }
-}
-//    public AnchorPane getController(){
-//        return anchorTradeControl;
-//    }
-//    public TradeInputScreenController(AnchorPane control) {
-//    }
-//
-//    public TradeInputScreenController() {
-//        // leftController.getChildren().setAll(control);
-//    }
\ No newline at end of file
Index: SystemEngine/src/resources/ex2-error-2.1.xml
===================================================================
diff --git a/SystemEngine/src/resources/ex2-error-2.1.xml b/SystemEngine/src/resources/ex2-error-2.1.xml
deleted file mode 100644
--- a/SystemEngine/src/resources/ex2-error-2.1.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<rizpa-stock-exchange-descriptor xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="RSE-V2.xsd">
-	<rse-stocks>
-		<rse-stock>
-			<rse-symbol>GOOGL</rse-symbol>
-			<rse-company-name>Google</rse-company-name>
-			<rse-price>100</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>AAPL</rse-symbol>
-			<rse-company-name>Apple</rse-company-name>
-			<rse-price>75</rse-price>
-		</rse-stock>				
-		<rse-stock>
-			<rse-symbol>MSFT</rse-symbol>
-			<rse-company-name>Microsoft</rse-company-name>
-			<rse-price>175</rse-price>
-		</rse-stock>				
-		<rse-stock>
-			<rse-symbol>AMZN</rse-symbol>
-			<rse-company-name>AMAZON</rse-company-name>
-			<rse-price>275</rse-price>
-		</rse-stock>	
-		<rse-stock>
-			<rse-symbol>ZM</rse-symbol>
-			<rse-company-name>Zoom</rse-company-name>
-			<rse-price>25</rse-price>
-		</rse-stock>				
-	</rse-stocks>
-	<rse-users>
-		<rse-user name="avrum">			
-			<rse-holdings>
-				<rse-item symbol="MSFT" quantity="50"/>
-				<rse-item symbol="AMZN" quantity="150"/>
-				<rse-item symbol="ZM" quantity="550"/>
-			</rse-holdings>						
-		</rse-user>
-		<rse-user name="tikva">			
-			<rse-holdings>
-				<rse-item symbol="GOOGL" quantity="250"/>
-			</rse-holdings>
-		</rse-user>
-		<rse-user name="avrum">			
-			<rse-holdings>
-				<rse-item symbol="AAPL" quantity="100"/>
-				<rse-item symbol="MSFT" quantity="200"/>
-				<rse-item symbol="GOOGL" quantity="300"/>
-			</rse-holdings>
-		</rse-user>
-	</rse-users>
-</rizpa-stock-exchange-descriptor>
Index: SystemEngine/SystemEngine.iml
===================================================================
diff --git a/SystemEngine/SystemEngine.iml b/SystemEngine/SystemEngine.iml
deleted file mode 100644
--- a/SystemEngine/SystemEngine.iml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module" module-name="DTO" />
-    <orderEntry type="module" module-name="JavaFXapp" />
-  </component>
-</module>
\ No newline at end of file
Index: SystemEngine/src/SystemEngine/Exceptions/NullQuantityException.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Exceptions/NullQuantityException.java b/SystemEngine/src/SystemEngine/Exceptions/NullQuantityException.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Exceptions/NullQuantityException.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,5 +0,0 @@
-package SystemEngine.Exceptions;
-
-public class NullQuantityException extends Exception {
-    public NullQuantityException(String s) { super(s); }
-}
Index: SystemEngine/src/SystemEngine/Instruction/LMT.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Instruction/LMT.java b/SystemEngine/src/SystemEngine/Instruction/LMT.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Instruction/LMT.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,58 +0,0 @@
-package SystemEngine.Instruction;
-
-import SystemEngine.Stock;
-import SystemEngine.Transaction;
-
-import java.time.LocalDateTime;
-
-import static java.lang.Integer.parseInt;
-import static java.lang.Math.min;
-
-public class LMT extends Instruction {
-
-    public LMT(LocalDateTime time, boolean isBuy, int price, int quantity, String operatorName) throws Exception {
-        super(time, isBuy, price, quantity, operatorName);
-    }
-
-    @Override
-    public void prepareAddingRemainderToInstructionList(Stock addedTo) {
-
-    }
-
-    @Override
-    public void buyStocks() {
-
-    }
-
-    @Override
-    public void sellStocks() {
-
-    }
-
-    @Override
-    public Transaction operateStock(Instruction newInstruction) {
-        int legalQuantity = min(quantity, newInstruction.getQuantity());
-        this.reduceQuantity(legalQuantity);
-        newInstruction.reduceQuantity(legalQuantity);
-        return new Transaction(newInstruction.time, price, legalQuantity, newInstruction.getClass().getSimpleName(), newInstruction.getOperatorName(), newInstruction.isBuy(), this.getOperatorName());
-    }
-
-
-    @Override
-    public boolean matchesOppositeInstruction(Instruction newInstruction) {
-        if (newInstruction.isBuy) {
-            if (this.price <= ((LMT) newInstruction).price)
-                return true;
-            else
-                return false;
-        } else {
-            if (this.price >= ((LMT) newInstruction).price)
-                return true;
-            else
-                return false;
-        }
-    }
-
-
-}
-
Index: JavaFXapp/src/usersTabPane/singleUserTab/SingleUserTabController.java
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/singleUserTab/SingleUserTabController.java b/JavaFXapp/src/usersTabPane/singleUserTab/SingleUserTabController.java
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/singleUserTab/SingleUserTabController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,256 +0,0 @@
-package usersTabPane.singleUserTab;
-
-import DTO.InstructionDTO;
-import DTO.UserDTO;
-import SystemEngine.StocksTradeSystem;
-import SystemEngine.User;
-import appControl.ApplicationControl;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-import javafx.collections.FXCollections;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.*;
-import javafx.scene.control.cell.PropertyValueFactory;
-import javafx.scene.layout.AnchorPane;
-
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-import java.util.List;
-
-public class SingleUserTabController {
-    private final StringProperty userNameProperty;
-    private final StringProperty userValueProperty;
-
-
-
-    private final StringProperty symbolChosenProperty;
-
-
-
-    private final String ENTER_SYMBOL_HERE = "Enter Symbol here";
-    List<User> userList;
-    @FXML
-    private AnchorPane anchorTradeControl;
-    @FXML
-    private ComboBox<String> comboBoxChooseOperator;
-    @FXML
-    private ComboBox<String> comboBoxChooseStock;
-    @FXML
-    private ToggleGroup tgTradeDirection;
-    @FXML
-    private ToggleGroup tgInstructionType;
-    @FXML
-    private TextField textFieldUserOffer;
-    @FXML
-    private TextField textFieldUserQuantityText;
-    @FXML
-    private Button buttonCommitInstruction;
-    @FXML
-    private RadioButton RBBuyer;
-
-
-    //    @FXML private Tab tabSell;
-//    @FXML private TableView<InstructionDTO> tableViewSaleBook;
-//    @FXML private TableColumn<InstructionDTO, Integer> tabSellPrice;
-//    @FXML private TableColumn<InstructionDTO, Integer> tabSellQuantity;
-//    @FXML private TableColumn<InstructionDTO, String> tabSellDate;
-//    @FXML private TableColumn<InstructionDTO, String> tabSellOriginal;
-//    @FXML private TableColumn<InstructionDTO, String> tabSellTrader;
-    @FXML
-    private RadioButton RBSeller;
-    @FXML
-    private RadioButton RBLMT;
-    @FXML
-    private RadioButton RBMKT;
-    @FXML
-    private TabPane tabPaneUsers;
-    @FXML
-    private Tab singleUserTab;
-    @FXML
-    private TableView<UserDTO.StockPaperDTO> userTableView;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, String> colUserCompany;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, String> colUserSymbol;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, Integer> colUserPrice;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, Integer> colUserQuantity;
-    @FXML
-    private Label labelChosenStock;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, Integer> colAtMarket;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, Integer> colIdle;
-    @FXML
-    private TableColumn<UserDTO.StockPaperDTO, Integer> colTotal;
-//    private final StringProperty priceFieldProperty;
-//    private final StringProperty quantityFieldProperty;
-    @FXML
-    private Label labelUserValues;
-    @FXML
-    private Label labelUserName;
-    private UserDTO user;
-
-
-
-
-    private StocksTradeSystem marketManager;
-    private ApplicationControl appControl;
-    @FXML
-    private ComboBox<String> CBSymbolTrade;
-
-    public SingleUserTabController() {
-        userNameProperty = new SimpleStringProperty("");
-        userValueProperty = new SimpleStringProperty("0");
-        symbolChosenProperty = new SimpleStringProperty(ENTER_SYMBOL_HERE);
-//        priceFieldProperty = new SimpleStringProperty("1234");
-//        quantityFieldProperty = new SimpleStringProperty("12");
-    }
-
-    public void initialize() {
-//        textFieldUserOffer.textProperty().bind(priceFieldProperty);
-//        textFieldUserOffer.setEditable(true);
-//        textFieldUserQuantityText.textProperty().bind(quantityFieldProperty);
-//        textFieldUserQuantityText.setEditable(true);
-
-        textFieldUserOffer.setText("100");
-        textFieldUserQuantityText.setText("10");
-        comboBoxChooseStock.promptTextProperty().bind(symbolChosenProperty);
-        labelUserName.textProperty().bind(userNameProperty);
-        labelUserValues.textProperty().bind(userValueProperty);
-//        labelChosenStock.textProperty().bind(symbolChosenProperty);
-    }
-
-    public void setUser(UserDTO user) {
-        this.user = user;
-    }
-
-    @FXML
-    private void commitTradeListener(ActionEvent event) throws Exception {
-
-        try {
-            checkSystematicLegalInput();
-            InstructionDTO gatheredInstruction = gatherInstructionDTO();
-            appControl.TradeCommit(gatheredInstruction, comboBoxChooseStock.getSelectionModel().getSelectedItem(), RBBuyer.isSelected(), event); // (instruction,symbol)
-
-        } catch (Exception e) {
-            appControl.throwMainApplication(e);
-        }
-
-
-    }
-
-    private void checkSystematicLegalInput() throws Exception {
-
-        String chosenStock = comboBoxChooseStock.getSelectionModel().getSelectedItem();
-        //symbol
-        if (chosenStock == null)
-            throw new Exception("Illegal operation:\nYou haven't chosen a stock to operateStock on.");
-
-
-        //price
-        int enteredPrice = Integer.parseInt(textFieldUserOffer.getText());
-        if (enteredPrice <= 0) {
-            throw new Exception("Illegal Price Error: the entered price must be a positive number, you nuts?");
-        }
-        //quantity
-
-        int enteredQuantity = Integer.parseInt(textFieldUserQuantityText.getText());
-
-        if (enteredQuantity > 0) {
-
-            List<UserDTO.StockPaperDTO> userStocksBook = appControl.getUserStocksBook(labelUserName.getText());
-            UserDTO.StockPaperDTO searchedPaper = null;
-            for (UserDTO.StockPaperDTO paper : userStocksBook) { //finds right paper to search for possetions
-                if (paper.getSymbol().equals(chosenStock)) {
-                    searchedPaper = paper;
-                    break;
-                }
-            }
-            if (!RBBuyer.isSelected()) {
-                if (searchedPaper == null) {
-                    throw new Exception("Stock not found Error: " + userNameProperty.getValue() + " has no stocks of type - " +
-                            comboBoxChooseStock.getSelectionModel().getSelectedItem() + " at his possetion. Lmao.");
-                } else {
-                    if (enteredQuantity > searchedPaper.getIdleQuantity()) {
-                        throw new Exception("Insufficient Quantity Error: " + userNameProperty.getValue()
-                                + " has only " + searchedPaper.getIdleQuantity() + " stocks" +
-                                " Whilst has" + enteredQuantity + " idle shares of this stock. Lol."); //Insuffisient (not empty)
-                    }
-                }
-            }
-        }
-        else{
-            throw new Exception("Error: the quantity must me a none-negative number.");
-        }
-    }
-    //throws exception in case of illegal input
-    private InstructionDTO gatherInstructionDTO() {
-        LocalDateTime timeMark = LocalDateTime.now();
-        InstructionDTO createdInstruction = null;
-
-        createdInstruction = new InstructionDTO();
-        createdInstruction.setTime(timeMark);
-        //DO: if null\not found... paint red
-        createdInstruction.setBuy(RBBuyer.isSelected());
-        createdInstruction.setInstructionType(RBLMT.isSelected() ? RBLMT.getText() : RBMKT.getText());
-
-        createdInstruction.setStrTime(timeMark.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")));
-        System.out.println((textFieldUserOffer.getText()));
-        System.out.println((textFieldUserQuantityText.getText()));
-        createdInstruction.setPrice(Integer.parseInt(textFieldUserOffer.getText()));
-        createdInstruction.setQuantity(Integer.parseInt(textFieldUserQuantityText.getText()));
-        createdInstruction.setOperatorName(userNameProperty.getValue());
-        //createdInstruction.setOperatorName(comboBoxChooseOperator.getSelectionModel().getSelectedItem());
-
-        return createdInstruction;
-    }
-
-    @FXML
-    private void symbolTradeListener(ActionEvent event) {
-
-
-    }
-
-    public void setMainController(ApplicationControl applicationController) {
-        this.appControl = applicationController;
-    }
-
-
-
-    private void loadUserStocksTable(StocksTradeSystem system, String userName) {
-
-        colUserSymbol.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, String>("symbol"));
-        colUserCompany.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, String>("companyName"));
-        colUserPrice.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, Integer>("currentPrice"));
-        colIdle.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, Integer>("idleQuantity"));
-        colAtMarket.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, Integer>("atMarketQuantity"));
-        colTotal.setCellValueFactory(new PropertyValueFactory<UserDTO.StockPaperDTO, Integer>("totalQuantity"));
-
-
-
-        userTableView.getItems().setAll(FXCollections.observableArrayList(system.getSafeUser(userName).getOwnedStocks()));
-    }
-
-
-    public void wiringXMLtoTab(StocksTradeSystem system, String userName) throws Exception {
-
-
-        setForm(system);
-        userNameProperty.setValue(userName);
-        userValueProperty.setValue(Integer.toString(system.getUserTotalVal(userName)));
-        loadUserStocksTable(system, userName);
-
-
-    }
-
-    private void setForm(StocksTradeSystem system) {
-        comboBoxChooseStock.getItems().addAll(system.getSafeStocks().keySet());
-    }
-
-    public void wireNewUser(String key, int userTotalVal) {
-
-    }
-}
Index: JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/StocksBookInputScreenController.java
===================================================================
diff --git a/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/StocksBookInputScreenController.java b/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/StocksBookInputScreenController.java
deleted file mode 100644
--- a/JavaFXapp/src/Components/inputScreen/stocksBookInputScreen/StocksBookInputScreenController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,49 +0,0 @@
-package Components.inputScreen.stocksBookInputScreen;
-
-import SystemEngine.MarketManager;
-import SystemEngine.StocksTradeSystem;
-import appControl.ApplicationControl;
-import appControl.SubController;
-import javafx.beans.property.StringProperty;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.Button;
-import javafx.scene.control.ComboBox;
-
-import javafx.fxml.FXML;
-import javafx.scene.control.ChoiceBox;
-import javafx.scene.control.TextArea;
-import javafx.scene.input.ContextMenuEvent;
-import javafx.scene.input.MouseEvent;
-import javafx.scene.layout.AnchorPane;
-
-public class StocksBookInputScreenController implements SubController{
-
-    @FXML private AnchorPane stocksBookController;
-    @FXML private TextArea DebugTextSpace;
-    @FXML private ChoiceBox<String> comboBoxLeftChooseStock;
-    @FXML private Button buttonSearchStock;
-
-    @Override public void setManager(StocksTradeSystem marketManager) {
-        this.marketManager = marketManager;
-    }
-    @Override public void setMainController(ApplicationControl applicationController)
-    {
-        this.appControl = applicationController;
-    }
-    @Override public void submitData() {
-        comboBoxLeftChooseStock.getItems().addAll(marketManager.getSafeStocks().keySet());
-    }
-
-    @FXML
-    void loadStockPageRequested(ActionEvent event) throws Exception {
-//        appControl.requestUpdateStocksBook(comboBoxLeftChooseStock.getSelectionModel().getSelectedItem());
-    }
-
-    @FXML
-    void requestLoadBook(MouseEvent event) {
-
-    }
-    private StocksTradeSystem marketManager;
-    private ApplicationControl appControl;
-}
Index: SystemEngine/src/resources/RSE-V2.xsd
===================================================================
diff --git a/SystemEngine/src/resources/RSE-V2.xsd b/SystemEngine/src/resources/RSE-V2.xsd
deleted file mode 100644
--- a/SystemEngine/src/resources/RSE-V2.xsd	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- edited with XMLSpy v2008 rel. 2 (http://www.altova.com) by mazuki (darksiderg) -->
-<!--W3C Schema generated by XMLSpy v2008 rel. 2 (http://www.altova.com)-->
-<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
-	<xs:element name="rse-users">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element ref="rse-user" maxOccurs="unbounded"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-user">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element ref="rse-holdings"/>
-			</xs:sequence>
-			<xs:attribute name="name" type="xs:string" use="required"/>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-symbol" type="xs:string"/>
-	<xs:element name="rse-stocks">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element ref="rse-stock" maxOccurs="unbounded"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-stock">
-		<xs:complexType>
-			<xs:all>
-				<xs:element ref="rse-symbol"/>
-				<xs:element ref="rse-company-name"/>
-				<xs:element ref="rse-price"/>
-			</xs:all>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-price" type="xs:int"/>
-	<xs:element name="rse-item">
-		<xs:complexType>
-			<xs:attribute name="symbol" type="xs:string" use="required"/>
-			<xs:attribute name="quantity" type="xs:int" use="required"/>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-holdings">
-		<xs:complexType>
-			<xs:sequence>
-				<xs:element ref="rse-item" maxOccurs="unbounded"/>
-			</xs:sequence>
-		</xs:complexType>
-	</xs:element>
-	<xs:element name="rse-company-name" type="xs:string"/>
-	<xs:element name="rizpa-stock-exchange-descriptor">
-		<xs:complexType>
-			<xs:all>
-				<xs:element ref="rse-stocks"/>
-				<xs:element ref="rse-users"/>
-			</xs:all>
-		</xs:complexType>
-	</xs:element>
-</xs:schema>
Index: DTO/src/DTO/TransactionDTO.java
===================================================================
diff --git a/DTO/src/DTO/TransactionDTO.java b/DTO/src/DTO/TransactionDTO.java
deleted file mode 100644
--- a/DTO/src/DTO/TransactionDTO.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,76 +0,0 @@
-package DTO;
-
-import SystemEngine.Transaction;
-
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-
-public class TransactionDTO {
-    public String getBuyerName() {
-        return buyerName;
-    }
-
-    public void setBuyerName(String buyerName) {
-        this.buyerName = buyerName;
-    }
-
-    public String getSellerName() {
-        return sellerName;
-    }
-
-    public void setSellerName(String sellerName) {
-        this.sellerName = sellerName;
-    }
-
-    public TransactionDTO(Transaction originalTransaction) {
-        this.isNew = originalTransaction.getIfNew();
-        this.time = originalTransaction.getTime();
-        this.strTime = time.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS"));
-        this.price = originalTransaction.getPrice();
-        this.quantity = originalTransaction.getQuantity();
-        this.instructionType = originalTransaction.getInstructionType();
-        this.invokersName = originalTransaction.getInvokedName();
-        this.buyerName = originalTransaction.getBuyersName().substring(0,1).toUpperCase() + originalTransaction.getBuyersName().substring(1);
-        this.sellerName = originalTransaction.getSellersName().substring(0,1).toUpperCase() + originalTransaction.getSellersName().substring(1);
-
-    }
-
-    public boolean isNew() {
-        return isNew;
-    }
-
-    public LocalDateTime getTime() {
-        return time;
-    }
-
-    public int getPrice() {
-        return price;
-    }
-
-    public int getTotalPayment() {
-        return price*quantity;
-    }
-
-    public int getQuantity() {
-        return quantity;
-    }
-
-    public String getInstructionType() {return instructionType;}
-
-    public String getStrTime() {return strTime;}
-
-    private boolean isNew = true;
-    private final LocalDateTime time;
-    private final String strTime;
-    private final int price;
-    private final int quantity;
-    private final String instructionType;
-    private String invokersName;
-    private String buyerName, sellerName;
-
-    public String getInvokersName() {
-        return invokersName;
-    }
-
-
-}
Index: SystemEngine/src/SystemEngine/generated/RseStock.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseStock.java b/SystemEngine/src/SystemEngine/generated/RseStock.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseStock.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,117 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;all>
- *         &lt;element ref="{}rse-symbol"/>
- *         &lt;element ref="{}rse-company-name"/>
- *         &lt;element ref="{}rse-price"/>
- *       &lt;/all>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-
-})
-@XmlRootElement(name = "rse-stock")
-public class RseStock {
-
-    @XmlElement(name = "rse-symbol", required = true)
-    protected String rseSymbol;
-    @XmlElement(name = "rse-company-name", required = true)
-    protected String rseCompanyName;
-    @XmlElement(name = "rse-price")
-    protected int rsePrice;
-
-    /**
-     * Gets the value of the rseSymbol property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link String }
-     *     
-     */
-    public String getRseSymbol() {
-        return rseSymbol;
-    }
-
-    /**
-     * Sets the value of the rseSymbol property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link String }
-     *     
-     */
-    public void setRseSymbol(String value) {
-        this.rseSymbol = value;
-    }
-
-    /**
-     * Gets the value of the rseCompanyName property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link String }
-     *     
-     */
-    public String getRseCompanyName() {
-        return rseCompanyName;
-    }
-
-    /**
-     * Sets the value of the rseCompanyName property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link String }
-     *     
-     */
-    public void setRseCompanyName(String value) {
-        this.rseCompanyName = value;
-    }
-
-    /**
-     * Gets the value of the rsePrice property.
-     * 
-     */
-    public int getRsePrice() {
-        return rsePrice;
-    }
-
-    /**
-     * Sets the value of the rsePrice property.
-     * 
-     */
-    public void setRsePrice(int value) {
-        this.rsePrice = value;
-    }
-
-}
Index: SystemEngine/src/SystemEngine/generated/RseUser.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseUser.java b/SystemEngine/src/SystemEngine/generated/RseUser.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseUser.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,99 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlAttribute;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element ref="{}rse-holdings"/>
- *       &lt;/sequence>
- *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-    "rseHoldings"
-})
-@XmlRootElement(name = "rse-user")
-public class RseUser {
-
-    @XmlElement(name = "rse-holdings", required = true)
-    protected RseHoldings rseHoldings;
-    @XmlAttribute(name = "name", required = true)
-    protected String name;
-
-    /**
-     * Gets the value of the rseHoldings property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link RseHoldings }
-     *     
-     */
-    public RseHoldings getRseHoldings() {
-        return rseHoldings;
-    }
-
-    /**
-     * Sets the value of the rseHoldings property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link RseHoldings }
-     *     
-     */
-    public void setRseHoldings(RseHoldings value) {
-        this.rseHoldings = value;
-    }
-
-    /**
-     * Gets the value of the name property.
-     * 
-     * @return
-     *     possible object is
-     *     {@link String }
-     *     
-     */
-    public String getName() {
-        return name;
-    }
-
-    /**
-     * Sets the value of the name property.
-     * 
-     * @param value
-     *     allowed object is
-     *     {@link String }
-     *     
-     */
-    public void setName(String value) {
-        this.name = value;
-    }
-
-}
Index: DTO/src/DTO/StockDTO.java
===================================================================
diff --git a/DTO/src/DTO/StockDTO.java b/DTO/src/DTO/StockDTO.java
deleted file mode 100644
--- a/DTO/src/DTO/StockDTO.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,62 +0,0 @@
-package DTO;
-
-import SystemEngine.Instruction.Instruction;
-import SystemEngine.Stock;
-import SystemEngine.Transaction;
-
-import java.util.*;
-
-public class StockDTO {
-    public StockDTO(Stock stock) {
-
-        this.companyName = stock.getCompanyName();
-        this.price = stock.getPrice();
-        this.fullCycle = stock.getCycle();
-        for (Instruction originalInstruction: stock.getSaleInstructionData()){
-            saleListDTO.add(new InstructionDTO(originalInstruction)) ;
-        }
-        for (Instruction originalInstruction: stock.getBuyInstructionData()){
-            buyListDTO.add(new InstructionDTO(originalInstruction)) ;
-        }
-        for (Transaction originalTransaction: stock.getTransactionList()){
-            transactionListDTO.push(new TransactionDTO(originalTransaction));
-        }
-
-    }
-
-
-
-    public String getCompanyName() {
-        return companyName;
-    }
-
-    public int getPrice() {
-        return price;
-    }
-
-    public int getCycle(){
-        return fullCycle;
-    }
-
-    public List<InstructionDTO> getSaleList() {
-        return saleListDTO;
-    }
-
-    public List<InstructionDTO> getBuyList() {
-        return buyListDTO;
-        }
-    public List<TransactionDTO> getTransactionList(){
-        return transactionListDTO;
-    }
-
-
-
-
-    private String companyName;
-    private int price, fullCycle;
-    private List<InstructionDTO> saleListDTO = new ArrayList<>();
-    private List<InstructionDTO> buyListDTO  = new ArrayList<>();
-    private LinkedList<TransactionDTO> transactionListDTO  = new LinkedList<>();
-
-
-}
Index: JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen.fxml
===================================================================
diff --git a/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen.fxml b/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen.fxml
deleted file mode 100644
--- a/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.Tab?>
-<?import javafx.scene.control.TabPane?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-<TabPane fx:id="actionsBar" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" tabClosingPolicy="UNAVAILABLE" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Components.outputScreen.outputStocks.OutputScreenController">
-  <tabs>
-    <Tab fx:id="mainTabOpenStocksBook" text="Open StocksBook">
-         <content>
-            <ScrollPane prefHeight="200.0" prefWidth="200.0">
-               <content>
-                  <TabPane prefHeight="372.0" prefWidth="601.0" tabClosingPolicy="UNAVAILABLE">
-                    <tabs>
-                      <Tab text="Buy">
-                        <content>
-                          <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewBuyBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                      <columns>
-                                        <TableColumn fx:id="tabBuyPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabBuyQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabBuyDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabBuyOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabBuyTrader" prefWidth="75.0" text="Trader" />
-                                      </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                        </content>
-                      </Tab>
-                      <Tab fx:id="tabSell" text="Sell">
-                           <content>
-                              <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader1" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewSaleBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                       <columns>
-                                          <TableColumn fx:id="tabSellPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabSellQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabSellDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabSellOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabSellTrader" prefWidth="75.0" text="Trader" />
-                                       </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                      </Tab>
-                        <Tab fx:id="tabTransaction" text="View History">
-                           <content>
-                              <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader11" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewTransactionBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                       <columns>
-                                          <TableColumn fx:id="tabTransactionPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabTransactionQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabTransactionDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabTransactionOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabTransactionBuyer" prefWidth="75.0" text="Buyer" />
-                                          <TableColumn fx:id="tabTransactionSeller" prefWidth="75.0" text="Seller" />
-                                       </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                        </Tab>
-                    </tabs>
-                  </TabPane>
-               </content>
-            </ScrollPane>
-         </content>
-    </Tab>
-      <Tab fx:id="mainTabTrade" text="Trade">
-        <content>
-          <AnchorPane>
-               <children>
-                  <VBox prefHeight="371.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                     <children>
-                      <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="241.0" prefWidth="577.0">
-                           <children>
-                            <AnchorPane layoutX="1.0" minHeight="0.0" minWidth="0.0" prefHeight="215.0" prefWidth="598.0">
-                                 <children>
-                                    <VBox prefHeight="215.0" prefWidth="598.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                                       <children>
-                                          <Label text="Transaction" />
-                                          <ScrollPane>
-                                             <content>
-                                                <TableView fx:id="tableViewTrade" accessibleText="Test" prefHeight="212.0" prefWidth="575.0">
-                                                  <columns>
-                                                    <TableColumn fx:id="tabTradeTabDate" prefWidth="75.0" text="Date" />
-                                                    <TableColumn fx:id="tabTradeTabType" prefWidth="75.0" text="Type" />
-                                                      <TableColumn fx:id="tabTradeTabQuantity" prefWidth="75.0" text="Quantity" />
-                                                      <TableColumn fx:id="tabTradeTabPrice" prefWidth="75.0" text="Price" />
-                                                  </columns>
-                                                   <columnResizePolicy>
-                                                      <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                                   </columnResizePolicy>
-                                                </TableView>
-                                             </content>
-                                          </ScrollPane>
-                                       </children>
-                                    </VBox>
-                                 </children>
-                              </AnchorPane>
-                           </children>
-                        </AnchorPane>
-                      <AnchorPane prefHeight="132.0" prefWidth="600.0">
-                           <children>
-                              <VBox layoutY="-24.0" prefHeight="155.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="-24.0">
-                                 <children>
-                                    <Label text="Reminder" />
-                                    <TextArea fx:id="textAreaInfo" prefHeight="156.0" prefWidth="600.0">
-                                       <padding>
-                                          <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
-                                       </padding>
-                                    </TextArea>
-                                 </children>
-                              </VBox>
-                           </children>
-                        </AnchorPane>
-                     </children>
-                  </VBox>
-               </children></AnchorPane>
-        </content>
-      </Tab>
-      <Tab fx:id="mainTabIntroduction" text="Introduction">
-        <content>
-          <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="180.0" prefWidth="200.0">
-               <children>
-                  <TextArea layoutX="88.0" layoutY="14.0" prefHeight="371.0" prefWidth="600.0" text="DO: Welcome Message&#10;&#10;&#10;&#10;&#10;DO: Some basic explanations.&#10;&#10;&#10;&#10;&#10;" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0" />
-               </children>
-            </AnchorPane>
-        </content>
-      </Tab>
-  </tabs>
-</TabPane>
Index: DTO/src/DTO/CMD4ReturnBundle.java
===================================================================
diff --git a/DTO/src/DTO/CMD4ReturnBundle.java b/DTO/src/DTO/CMD4ReturnBundle.java
deleted file mode 100644
--- a/DTO/src/DTO/CMD4ReturnBundle.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,46 +0,0 @@
-package DTO;
-
-import SystemEngine.Instruction.Instruction;
-import SystemEngine.Transaction;
-
-import java.util.LinkedList;
-import java.util.List;
-
-public class CMD4ReturnBundle {
-    private LinkedList<TransactionDTO> transactionList = new LinkedList<>();
-    private InstructionDTO newInstruction;
-
-    public CMD4ReturnBundle(LinkedList<Transaction> transactionList, Instruction newInstruction) {
-        if (transactionList != null)
-            transactionList.forEach((tr) -> this.transactionList.add(new TransactionDTO(tr)));
-        else
-            this.transactionList = null;
-
-        if (newInstruction != null)
-            this.newInstruction = new InstructionDTO(newInstruction);
-        else
-            this.newInstruction = null;
-    }
-
-    public void setInsDTO(InstructionDTO instruction) {
-        newInstruction = instruction;
-    }
-
-    public InstructionDTO getInsDTO() {
-        return newInstruction;
-    }
-
-    public List<TransactionDTO> getTransactionsMade() {
-        return transactionList;
-    }
-
-
-    public void add(TransactionDTO completeOperations) {
-        this.transactionList.add(completeOperations);
-    }
-
-    public void setIns(InstructionDTO ins) {
-        this.newInstruction = ins;
-    }
-}
-
Index: SystemEngine/src/SystemEngine/.idea/vcs.xml
===================================================================
diff --git a/SystemEngine/src/SystemEngine/.idea/vcs.xml b/SystemEngine/src/SystemEngine/.idea/vcs.xml
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/.idea/vcs.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$/../../.." vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: SystemEngine/src/resources/readFile.dat
===================================================================
diff --git a/SystemEngine/src/resources/readFile.dat b/SystemEngine/src/resources/readFile.dat
deleted file mode 100644
--- a/SystemEngine/src/resources/readFile.dat	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,6 +0,0 @@
-�� sr java.util.HashMap���`� F 
-loadFactorI 	thresholdxp?@     w      t MSFTsr SystemEngine.Stockz�Oĕ;�` I BUYI BufferClearerCntI 	NOT_FOUNDI SELLI ZEROI 	fullCycleI 
-stockPriceL BuyInstructionst Ljava/util/Set;L SaleInstructionsq ~ L companyNamet Ljava/lang/String;L pastTransactionst Ljava/util/LinkedList;xp        ����              �sr java.util.TreeSetݘP���[  xppw    xsq ~ pw    xt 	Microsoftsr java.util.LinkedList)S]J`�"  xpw    xt GOOGLsq ~         ����              dsq ~ pw    xsq ~ pw    xt Googlesq ~ w    xt AAPLsq ~         ����         R   nsq ~ pw   sr SystemEngine.Instruction.MKT\'gx6�,  xr SystemEngine.Instruction.LMTN���,f  xr $SystemEngine.Instruction.Instruction�D�1Ϛ I NOT_INITZ isBuyZ isNewI priceI quantityL timet Ljava/time/LocalDateTime;xp       n   sr 
-java.time.Ser�]��"H�  xpw  �:);?<�xxsq ~ pw    xt Applesq ~ w   sr SystemEngine.Transaction�g�-,^Ѫ Z isNewI priceI quantityL dateq ~ L instructionTypeq ~ xp    n   q ~ t MKTsq ~ !    _   q ~ t MKTsq ~ !    Z   q ~ t MKTsq ~ !    U   
-sq ~ w  �:);u�xt MKTsq ~ !    P   
-q ~ )t MKTsq ~ !    P   sq ~ w  �:):�l�xt MKTsq ~ !    P   sq ~ w  �:):x�@xt MKTxt ZMsq ~         ����              sq ~ pw    xsq ~ pw    xt Zoomsq ~ w    xt AMZNsq ~         ����             sq ~ pw    xsq ~ pw    xt AMAZONsq ~ w    xx
\ No newline at end of file
Index: JavaFXapp/src/menuScreen/menuScreen.fxml
===================================================================
diff --git a/JavaFXapp/src/menuScreen/menuScreen.fxml b/JavaFXapp/src/menuScreen/menuScreen.fxml
deleted file mode 100644
--- a/JavaFXapp/src/menuScreen/menuScreen.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.SplitPane?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.HBox?>
-
-<AnchorPane prefHeight="53.0" prefWidth="600.0" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="menuScreen.MenuScreenController">
-    <children>
-        <SplitPane dividerPositions="0.5" layoutY="10.0" orientation="VERTICAL" prefHeight="53.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-            <items>
-                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="100.0" prefWidth="160.0">
-                    <children>
-                  <HBox fx:id="statusBox" alignment="CENTER" prefHeight="23.0" prefWidth="598.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                     <children>
-                                <Label fx:id="labelSystemStatus" text="System Status: INSERT" />
-                     </children>
-                  </HBox>
-                    </children>
-                </AnchorPane>
-                <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="100.0" prefWidth="160.0">
-                    <children>
-                        <HBox alignment="CENTER_RIGHT" prefHeight="22.0" prefWidth="598.0" spacing="10.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                            <children>
-                        <Button fx:id="buttonLoadTester" mnemonicParsing="false" onAction="#virtualizationRequestListener" text="Load tester" />
-                        <Label fx:id="labelFilePathLoaded" text="Current FXML loaded:" />
-                        <Button mnemonicParsing="false" text="Settings" />
-                                  <Button fx:id="ButtonLoadFXML" mnemonicParsing="false" onAction="#xmlLoadingAttemptListener" text="Load new XML file" />
-                            </children>
-                        </HBox>
-                    </children>
-                </AnchorPane>
-            </items>
-        </SplitPane>
-    </children>
-</AnchorPane>
Index: SystemEngine/src/SystemEngine/Stock.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Stock.java b/SystemEngine/src/SystemEngine/Stock.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Stock.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,163 +0,0 @@
-package SystemEngine;
-
-import DTO.CMD4ReturnBundle;
-import DTO.InstructionDTO;
-import DTO.TransactionDTO;
-import SystemEngine.Instruction.Instruction;
-
-import java.io.Serializable;
-import java.rmi.activation.ActivateFailedException;
-import java.util.*;
-
-public class Stock implements Serializable {
-
-
-    @Override
-    public int hashCode() {
-        return Objects.hash(SELL, BUY, NOT_FOUND, ZERO, BufferClearerCnt, companyName, stockPrice, BuyInstructions, SaleInstructions, pastTransactions);
-    }
-
-
-
-//    public CMD4ReturnBundle operate(Instruction newInstruction, Collection<Instruction> sameType, Collection<Instruction> oppositeType) throws ActivateFailedException {
-//        CMD4ReturnBundle rb = new CMD4ReturnBundle();
-//        for (Instruction oppositeInstrucion : oppositeType) {
-//            if (!newInstruction.getOperatorName().equals(oppositeInstrucion.getOperatorName())) {
-//                if (newInstruction.matchesOppositeInstruction(oppositeInstrucion)) {
-//                    Transaction tr = oppositeInstrucion.operateStock(newInstruction);
-//                    pastTransactions.push(tr);
-//                    updateStock(tr.getQuantity(), tr.getPrice(), tr.getTotalPayment());
-//               //     updateUsers(newInstruction, oppositeInstrucion, tr);
-//                    rb.add(new TransactionDTO(tr));
-//
-//                    if (oppositeInstrucion.getQuantity() == 0){
-//                        oppositeType.remove(oppositeInstrucion);
-//                    }
-//                    if (newInstruction.getQuantity() == 0) {
-//                        break;
-//                    }
-//                }
-//            }
-//        }
-//        boolean status = true;
-//        if (newInstruction.getQuantity() > 0) {
-//            newInstruction.prepareAddingRemainderToInstructionList(this);
-//            status = sameType.add(newInstruction);
-//             rb.setInsDTO(new InstructionDTO(newInstruction));
-//        }
-//        if (status == false){
-//            throw new ActivateFailedException("Error loading to instruction list! This may be caused by various technical reasons. Call a technician");
-//        }
-//        return rb;
-//    }
-
-    private void updateUsers(Instruction newInstruction, Instruction oppositeInstruction, Transaction tr) {
-
-    }
-
-
-    public void updateStock(int quantity, int newPrice, int addToCycleSum){
-    this.stockPrice = newPrice;
-    this.fullCycle += addToCycleSum;
-    }
-
-
-    public void simplePrint() {
-       // System.out.println("Symbol: " + symbol);
-        System.out.println("Company: " + companyName);
-        System.out.println("Price: " + stockPrice);
-        System.out.println("Total transactions: " + pastTransactions.size());
-        System.out.println("Full Cycle: " + fullCycle + "\n");
-    }
-
-
-
-    public void setPrice(int newPrice) {
-        stockPrice = newPrice;
-    }
-
-    public Stock(String name, int price) throws Exception {
-//        char[] chars = symbol.toCharArray();
-//        for (char c: chars){
-//            if (!Character.isLetter(c))
-//                if (!Character.isUpperCase(c))
-//                    throw new IllegalArgumentException("a stock's symbol must contain capital letters only." + ("Symbol in file: " + symbol));
-//        }
-//        this.symbol = symbol;
-
-        if (price < 0) {
-            throw new IllegalArgumentException("You've entered: " + price + "Price must be none-negative.");
-        }
-        this.stockPrice = price;
-
-        char[] chars = name.toCharArray();
-        for (char c: chars){
-            if (!Character.isLetter(c) && (c != ' '))
-                throw new IllegalArgumentException("a stock's company name must be consisted out of letters. it may also contain spaces." + ("Name in file: " + name));
-        }
-        this.companyName = name;
-    }
-    public int getNumOfTransitions(){return pastTransactions.size();}
-
-
-
-    public int getPrice() {
-        return stockPrice;
-    }
-
-    public String getCompanyName() {
-        return companyName;
-    }
-
-    public int getCycle() {
-        return fullCycle;
-    }
-
-    public LinkedList<Transaction> getTransactionList() {
-        return pastTransactions;
-    }
-
-    public Collection<Instruction> getSaleInstructionData() {
-        return SaleInstructions;
-    }
-
-    public Collection<Instruction> getBuyInstructionData() {
-        return BuyInstructions;
-    }
-
-
-    final int SELL = 1;
-    final int BUY = 0;
-    final int NOT_FOUND = -1;
-    final int ZERO = 0;
-
-    int BufferClearerCnt = 0;
-
-    //private final String symbol;
-    private final String companyName;
-    private int stockPrice = 0, fullCycle = 0;
-
-
-    private void closeFinishedInstructions(){
-        Iterator<Instruction> itr1 = BuyInstructions.iterator();
-        while(itr1.hasNext()) {
-            if (itr1.next().getQuantity() == 0)
-                itr1.remove();
-        }
-        Iterator<Instruction> itr2 = SaleInstructions.iterator();
-        while(itr2.hasNext()) {
-        if (itr2.next().getQuantity() == 0)
-                itr2.remove();
-        }
-    }
-
-    public void clearCache(){
-        closeFinishedInstructions();
-    }
-
-    private Set<Instruction> BuyInstructions = new TreeSet<>();
-    private Set<Instruction> SaleInstructions = new TreeSet<>();
-    private LinkedList<Transaction> pastTransactions = new LinkedList<>();
-
-
-}
Index: SystemEngine/src/SystemEngine/generated/RseHoldings.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/RseHoldings.java b/SystemEngine/src/SystemEngine/generated/RseHoldings.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/RseHoldings.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,78 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import java.util.ArrayList;
-import java.util.List;
-import javax.xml.bind.annotation.XmlAccessType;
-import javax.xml.bind.annotation.XmlAccessorType;
-import javax.xml.bind.annotation.XmlElement;
-import javax.xml.bind.annotation.XmlRootElement;
-import javax.xml.bind.annotation.XmlType;
-
-
-/**
- * <p>Java class for anonymous complex type.
- * 
- * <p>The following schema fragment specifies the expected content contained within this class.
- * 
- * <pre>
- * &lt;complexType>
- *   &lt;complexContent>
- *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
- *       &lt;sequence>
- *         &lt;element ref="{}rse-item" maxOccurs="unbounded"/>
- *       &lt;/sequence>
- *     &lt;/restriction>
- *   &lt;/complexContent>
- * &lt;/complexType>
- * </pre>
- * 
- * 
- */
-@XmlAccessorType(XmlAccessType.FIELD)
-@XmlType(name = "", propOrder = {
-    "rseItem"
-})
-@XmlRootElement(name = "rse-holdings")
-public class RseHoldings {
-
-    @XmlElement(name = "rse-item", required = true)
-    protected List<RseItem> rseItem;
-
-    /**
-     * Gets the value of the rseItem property.
-     * 
-     * <p>
-     * This accessor method returns a reference to the live list,
-     * not a snapshot. Therefore any modification you make to the
-     * returned list will be present inside the JAXB object.
-     * This is why there is not a <CODE>set</CODE> method for the rseItem property.
-     * 
-     * <p>
-     * For example, to add a new item, do as follows:
-     * <pre>
-     *    getRseItem().add(newItem);
-     * </pre>
-     * 
-     * 
-     * <p>
-     * Objects of the following type(s) are allowed in the list
-     * {@link RseItem }
-     * 
-     * 
-     */
-    public List<RseItem> getRseItem() {
-        if (rseItem == null) {
-            rseItem = new ArrayList<RseItem>();
-        }
-        return this.rseItem;
-    }
-
-}
Index: SystemEngine/src/SystemEngine/.idea/misc.xml
===================================================================
diff --git a/SystemEngine/src/SystemEngine/.idea/misc.xml b/SystemEngine/src/SystemEngine/.idea/misc.xml
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/.idea/misc.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: DTO/src/DTO/MarketDTO.java
===================================================================
diff --git a/DTO/src/DTO/MarketDTO.java b/DTO/src/DTO/MarketDTO.java
deleted file mode 100644
--- a/DTO/src/DTO/MarketDTO.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,20 +0,0 @@
-package DTO;
-
-
-import java.util.*;
-
-public class MarketDTO {
-    private Map<String, StockDTO> safeStocks;
-    private Map<String, UserDTO> userDB;
-
-    public MarketDTO(Map stocks) {
-        safeStocks = new HashMap<>();
-        safeStocks.putAll(stocks);
-    }
-
-    public Map<String, StockDTO> getSafeStocks() {
-        return safeStocks;
-    }
-}
-
-
Index: SystemEngine/src/resources/ex2-small.xml
===================================================================
diff --git a/SystemEngine/src/resources/ex2-small.xml b/SystemEngine/src/resources/ex2-small.xml
deleted file mode 100644
--- a/SystemEngine/src/resources/ex2-small.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<rizpa-stock-exchange-descriptor xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="RSE-V2.xsd">
-	<rse-stocks>
-		<rse-stock>
-			<rse-symbol>GOOGL</rse-symbol>
-			<rse-company-name>Google</rse-company-name>
-			<rse-price>100</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>AAPL</rse-symbol>
-			<rse-company-name>Apple</rse-company-name>
-			<rse-price>75</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>MSFT</rse-symbol>
-			<rse-company-name>Microsoft</rse-company-name>
-			<rse-price>175</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>AMZN</rse-symbol>
-			<rse-company-name>AMAZON</rse-company-name>
-			<rse-price>275</rse-price>
-		</rse-stock>
-		<rse-stock>
-			<rse-symbol>ZM</rse-symbol>
-			<rse-company-name>Zoom</rse-company-name>
-			<rse-price>25</rse-price>
-		</rse-stock>
-	</rse-stocks>
-	<rse-users>
-		<rse-user name="menash">
-			<rse-holdings>
-				<rse-item symbol="MSFT" quantity="50"/>
-				<rse-item symbol="AMZN" quantity="150"/>
-				<rse-item symbol="ZM" quantity="550"/>
-			</rse-holdings>
-		</rse-user>
-		<rse-user name="tikva">
-			<rse-holdings>
-				<rse-item symbol="GOOGL" quantity="250"/>
-				<rse-item symbol="MSFT" quantity="150"/>
-			</rse-holdings>
-		</rse-user>
-		<rse-user name="avrum">
-			<rse-holdings>
-				<rse-item symbol="AAPL" quantity="100"/>
-				<rse-item symbol="MSFT" quantity="200"/>
-				<rse-item symbol="GOOGL" quantity="300"/>
-			</rse-holdings>
-		</rse-user>
-	</rse-users>
-</rizpa-stock-exchange-descriptor>
Index: JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab2.fxml
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab2.fxml b/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab2.fxml
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/singleUserTab/singleUserTab2.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,169 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.ComboBox?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.RadioButton?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.Separator?>
-<?import javafx.scene.control.Slider?>
-<?import javafx.scene.control.Tab?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.control.ToggleGroup?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.BorderPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-<Tab fx:id="singleUserTab" text="Untitled Tab" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="usersTabPane.singleUserTab.SingleUserTabController">
-   <content>
-      <BorderPane>
-         <center>
-            <ScrollPane>
-               <content>
-                  <HBox>
-                     <children>
-                        <VBox>
-                           <children>
-                              <HBox prefHeight="100.0" prefWidth="200.0">
-                                 <children>
-                                    <Label text="User's Name:" />
-                                    <Label fx:id="labelUserName" text="name" />
-                                 </children>
-                              </HBox>
-                              <HBox prefHeight="100.0" prefWidth="200.0" spacing="5.0">
-                                 <children>
-                                    <Label text="Market Values:" />
-                                    <Label fx:id="labelUserValues" text="Values" />
-                                 </children>
-                              </HBox>
-                              <TableView fx:id="userTableView" prefHeight="175.0" prefWidth="306.0">
-                                 <columns>
-                                    <TableColumn fx:id="colUserCompany" prefWidth="75.0" text="Company" />
-                                    <TableColumn fx:id="colUserSymbol" prefWidth="75.0" text="Symbol" />
-                                    <TableColumn fx:id="colUserPrice" prefWidth="75.0" text="Price" />
-                                    <TableColumn fx:id="colUserQuantity" prefWidth="75.0" text="Quantity">
-                                       <columns>
-                                          <TableColumn fx:id="colIdle" prefWidth="75.0" text="Idle" />
-                                          <TableColumn fx:id="colAtMarket" prefWidth="75.0" text="In The Market" />
-                                          <TableColumn fx:id="colTotal" prefWidth="75.0" text="Total" />
-                                       </columns></TableColumn>
-                                 </columns>
-                              </TableView>
-                           </children>
-                        </VBox>
-                     </children>
-                     <opaqueInsets>
-                        <Insets />
-                     </opaqueInsets>
-                  </HBox>
-               </content>
-            </ScrollPane>
-         </center>
-         <right>
-            <AnchorPane fx:id="anchorTradeControl" prefHeight="695.0" prefWidth="247.0" BorderPane.alignment="CENTER">
-               <children>
-                  <VBox alignment="CENTER" layoutY="-30.0">
-                     <children>
-                        <Label alignment="CENTER" text="Trade Menu" />
-                        <Separator prefWidth="200.0" />
-                        <VBox alignment="CENTER" prefHeight="401.0" prefWidth="250.0" spacing="3.0">
-                           <children>
-                              <VBox>
-                                 <children>
-                                    <VBox alignment="CENTER">
-                                       <children>
-                                          <Label fx:id="labelChosenStock" text="Choose Stock to operate on:" />
-                                          <ComboBox fx:id="comboBoxChooseStock" onAction="#symbolTradeListener" prefWidth="150.0" promptText="symbol" />
-                                       </children>
-                                    </VBox>
-                                 </children>
-                              </VBox>
-                              <Separator prefWidth="200.0" />
-                              <VBox alignment="CENTER">
-                                 <children>
-                                    <Label text="Choose Trade Direction" />
-                                    <HBox alignment="CENTER" prefHeight="29.0" prefWidth="600.0" spacing="5.0">
-                                       <children>
-                                          <RadioButton fx:id="RBBuyer" contentDisplay="CENTER" lineSpacing="5.0" mnemonicParsing="false" selected="true" text="Buyer">
-                                             <toggleGroup>
-                                                <ToggleGroup fx:id="tgTradeDirection" />
-                                             </toggleGroup>
-                                          </RadioButton>
-                                          <RadioButton fx:id="RBSeller" contentDisplay="CENTER" mnemonicParsing="false" text="Seller" toggleGroup="$tgTradeDirection" />
-                                       </children>
-                                       <padding>
-                                          <Insets left="3.0" />
-                                       </padding>
-                                    </HBox>
-                                 </children>
-                              </VBox>
-                              <Separator prefWidth="200.0" />
-                              <VBox alignment="CENTER">
-                                 <children>
-                                    <Label alignment="CENTER" prefHeight="17.0" prefWidth="375.0" text="Choose action: " />
-                                    <HBox alignment="CENTER" prefHeight="22.0" prefWidth="599.0">
-                                       <children>
-                                          <RadioButton fx:id="RBLMT" mnemonicParsing="false" selected="true" text="LMT">
-                                             <toggleGroup>
-                                                <ToggleGroup fx:id="tgInstructionType" />
-                                             </toggleGroup>
-                                          </RadioButton>
-                                          <RadioButton fx:id="RBMKT" mnemonicParsing="false" text="MKT" toggleGroup="$tgInstructionType" />
-                                       </children>
-                                    </HBox>
-                                 </children>
-                              </VBox>
-                              <Separator prefWidth="200.0" />
-                              <VBox alignment="CENTER" prefHeight="67.0" prefWidth="326.0">
-                                 <children>
-                                    <Label alignment="CENTER" text="Price Offer" />
-                                    <HBox alignment="CENTER_LEFT" prefHeight="36.0" prefWidth="372.0">
-                                       <children>
-                                          <Label prefHeight="17.0" prefWidth="152.0" text="Manually enter offer:" />
-                                          <TextField fx:id="textFieldUserOffer" />
-                                       </children>
-                                    </HBox>
-                                    <HBox alignment="CENTER_LEFT" prefHeight="28.0" prefWidth="372.0">
-                                       <children>
-                                          <Label text="Or via slider: " />
-                                          <Slider />
-                                       </children>
-                                    </HBox>
-                                 </children>
-                              </VBox>
-                              <Separator prefWidth="200.0" />
-                              <VBox alignment="TOP_CENTER" prefHeight="400.0" prefWidth="326.0">
-                                 <children>
-                                    <Label alignment="CENTER" text="Quantity" />
-                                    <HBox alignment="CENTER_LEFT" prefHeight="36.0" prefWidth="372.0">
-                                       <children>
-                                          <Label text="Manually enter offer:" />
-                                          <TextField fx:id="textFieldUserQuantityText" text="0" />
-                                       </children>
-                                    </HBox>
-                                    <HBox alignment="CENTER_LEFT" prefHeight="28.0" prefWidth="372.0">
-                                       <children>
-                                          <Label text="Or via slider: " />
-                                          <Slider />
-                                       </children>
-                                    </HBox>
-                                 </children>
-                              </VBox>
-                              <Button mnemonicParsing="false" onAction="#commitTradeListener" text="Commit Entered Instruction" />
-                           </children>
-                        </VBox>
-                     </children>
-                  </VBox>
-               </children>
-            </AnchorPane>
-         </right>
-         <padding>
-            <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
-         </padding>
-      </BorderPane>
-   </content>
-</Tab>
Index: JavaFXapp/src/usersTabPane/users.fxml
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/users.fxml b/JavaFXapp/src/usersTabPane/users.fxml
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/users.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.TabPane?>
-
-
-<TabPane fx:id="mainTabPane" prefHeight="400.0" prefWidth="600.0" tabClosingPolicy="UNAVAILABLE" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="usersTabPane.UsersController" />
Index: JavaFXapp/src/usersTabPane/UsersController.java
===================================================================
diff --git a/JavaFXapp/src/usersTabPane/UsersController.java b/JavaFXapp/src/usersTabPane/UsersController.java
deleted file mode 100644
--- a/JavaFXapp/src/usersTabPane/UsersController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,105 +0,0 @@
-package usersTabPane;
-
-import com.sun.xml.internal.bind.v2.runtime.unmarshaller.XsiNilLoader;
-import javafx.beans.property.*;
-import javafx.scene.control.SelectionModel;
-import javafx.scene.control.SingleSelectionModel;
-import javafx.scene.control.Tab;
-import usersTabPane.adminTab.AdminTabController;
-import usersTabPane.singleUserTab.SingleUserTabController;
-import appControl.ApplicationControl;
-import javafx.fxml.FXML;
-import javafx.scene.control.TabPane;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class UsersController {
-
-    @FXML
-    private TabPane mainTabPane;
-
-
-
-    private Tab previouslySelectedUserTab;
-
-    private ApplicationControl appControl;
-    private Tab tabAdmin;
-    private AdminTabController adminTabController;
-
-    public void setUserByIndex(int index) {
-        Tab tab = new Tab();
-        mainTabPane.setSelectionModel(previouslySelectedUserTab.getTabPane().getSelectionModel());
-    }
-
-    public void setPreviouslySelectedUserTab(Tab previouslySelectedUserTab) {
-        this.previouslySelectedUserTab = previouslySelectedUserTab;
-    }
-
-    public UsersController() {
-        System.out.println("OutputUsersController constructor");
-      //  previouslySelectedUserIndex = new SimpleIntegerProperty();
-    }
-
-    public void initialize() {
-        System.out.println("OutputUsersController init");
-
-    }
-
-    public void setTabSelectionProperty(Tab lastSelectedUserName){
-        mainTabPane.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue)->{
-            newValue = lastSelectedUserName;
-        });
-
-
-        }
-
-
-    public void setMainController(ApplicationControl applicationController) {
-        appControl = applicationController;
-    }
-
-    public void getAdminOperatedStock() {
-
-    }
-
-    public void setAdminTab(Tab tabAdmin) {
-        this.tabAdmin = tabAdmin;
-    }
-
-    public void setAdminController(AdminTabController adminTabController) {
-        this.adminTabController = adminTabController;
-
-    }
-
-//    private void addToTabList(List<SingleUserTabController> tabControllersList){
-//        this.tabList = tabControllersList;
-//    }
-
-    public String getOpenStockAtAdmin() {
-        return adminTabController.getOpenStock();
-    }
-
-//    public void setAdminSelectedStock(String openStock) {
-//        adminTabController.setAdminSelectedStock(openStock);
-//    }
-
-    public AdminTabController getAdminController() {
-        return adminTabController;
-    }
-
-    public SingleSelectionModel<Tab> getOpenTabModel() {
-        return mainTabPane.getSelectionModel();
-    }
-
-
-    public String getOpenTab() {
-        SelectionModel<Tab>  tab = mainTabPane.getSelectionModel();
-        Tab selectedItem = tab.getSelectedItem();
-        String retName = null;
-        if (selectedItem != null) {
-            retName = selectedItem.getText();
-        }
-        return retName;
-    }
-}
Index: SystemEngine/src/SystemEngine/Exceptions/UniqueException.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Exceptions/UniqueException.java b/SystemEngine/src/SystemEngine/Exceptions/UniqueException.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Exceptions/UniqueException.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,14 +0,0 @@
-package SystemEngine.Exceptions;
-
-public class UniqueException extends IllegalArgumentException{
-    public UniqueException(String typeWasDoubled, String ofWhatCompany){
-        this.typeWasDoubled = typeWasDoubled;
-        this.ofWhatCompany = ofWhatCompany;
-
-    }
-    public String getType(){return typeWasDoubled;}
-    public String getDoubled(){return ofWhatCompany;}
-
-    String typeWasDoubled;
-    String ofWhatCompany;
-}
Index: SystemEngine/src/SystemEngine/.idea/modules.xml
===================================================================
diff --git a/SystemEngine/src/SystemEngine/.idea/modules.xml b/SystemEngine/src/SystemEngine/.idea/modules.xml
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/.idea/modules.xml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/SystemEngine.iml" filepath="$PROJECT_DIR$/SystemEngine.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: SystemEngine/src/SystemEngine/generated/ObjectFactory.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/generated/ObjectFactory.java b/SystemEngine/src/SystemEngine/generated/ObjectFactory.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/generated/ObjectFactory.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,128 +0,0 @@
-//
-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
-// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
-// Any modifications to this file will be lost upon recompilation of the source schema. 
-// Generated on: 2021.04.16 at 10:43:40 AM IDT 
-//
-
-
-package SystemEngine.generated;
-
-import javax.xml.bind.JAXBElement;
-import javax.xml.bind.annotation.XmlElementDecl;
-import javax.xml.bind.annotation.XmlRegistry;
-import javax.xml.namespace.QName;
-
-
-/**
- * This object contains factory methods for each 
- * Java content interface and Java element interface 
- * generated in the SystemEngine.generated package. 
- * <p>An ObjectFactory allows you to programatically 
- * construct new instances of the Java representation 
- * for XML content. The Java representation of XML 
- * content can consist of schema derived interfaces 
- * and classes representing the binding of schema 
- * type definitions, element declarations and model 
- * groups.  Factory methods for each of these are 
- * provided in this class.
- * 
- */
-@XmlRegistry
-public class ObjectFactory {
-
-    private final static QName _RseCompanyName_QNAME = new QName("", "rse-company-name");
-    private final static QName _RseSymbol_QNAME = new QName("", "rse-symbol");
-    private final static QName _RsePrice_QNAME = new QName("", "rse-price");
-
-    /**
-     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: SystemEngine.generated
-     * 
-     */
-    public ObjectFactory() {
-    }
-
-    /**
-     * Create an instance of {@link RseStocks }
-     * 
-     */
-    public RseStocks createRseStocks() {
-        return new RseStocks();
-    }
-
-    /**
-     * Create an instance of {@link RseStock }
-     * 
-     */
-    public RseStock createRseStock() {
-        return new RseStock();
-    }
-
-    /**
-     * Create an instance of {@link RizpaStockExchangeDescriptor }
-     * 
-     */
-    public RizpaStockExchangeDescriptor createRizpaStockExchangeDescriptor() {
-        return new RizpaStockExchangeDescriptor();
-    }
-
-    /**
-     * Create an instance of {@link RseUsers }
-     * 
-     */
-    public RseUsers createRseUsers() {
-        return new RseUsers();
-    }
-
-    /**
-     * Create an instance of {@link RseUser }
-     * 
-     */
-    public RseUser createRseUser() {
-        return new RseUser();
-    }
-
-    /**
-     * Create an instance of {@link RseHoldings }
-     * 
-     */
-    public RseHoldings createRseHoldings() {
-        return new RseHoldings();
-    }
-
-    /**
-     * Create an instance of {@link RseItem }
-     * 
-     */
-    public RseItem createRseItem() {
-        return new RseItem();
-    }
-
-    /**
-     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
-     * 
-     */
-    @XmlElementDecl(namespace = "", name = "rse-company-name")
-    public JAXBElement<String> createRseCompanyName(String value) {
-        return new JAXBElement<String>(_RseCompanyName_QNAME, String.class, null, value);
-    }
-
-    /**
-     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
-     * 
-     */
-    @XmlElementDecl(namespace = "", name = "rse-symbol")
-    public JAXBElement<String> createRseSymbol(String value) {
-        return new JAXBElement<String>(_RseSymbol_QNAME, String.class, null, value);
-    }
-
-    /**
-     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
-     * 
-     */
-    @XmlElementDecl(namespace = "", name = "rse-price")
-    public JAXBElement<Integer> createRsePrice(Integer value) {
-        return new JAXBElement<Integer>(_RsePrice_QNAME, Integer.class, null, value);
-    }
-
-}
Index: JavaFXapp/src/appControl/ApplicationMain.java
===================================================================
diff --git a/JavaFXapp/src/appControl/ApplicationMain.java b/JavaFXapp/src/appControl/ApplicationMain.java
deleted file mode 100644
--- a/JavaFXapp/src/appControl/ApplicationMain.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,73 +0,0 @@
-package appControl;
-
-import javafx.application.Application;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Scene;
-import javafx.scene.layout.BorderPane;
-import javafx.stage.Stage;
-
-import java.io.IOException;
-import java.net.URL;
-
-public class ApplicationMain extends Application {
-
-
-    public ApplicationMain() throws IOException {
-
-    }
-
-    @Override
-    public void start(Stage primaryStage) throws Exception {
-
-            FXMLLoader fxmlLoader = new FXMLLoader();
-            URL url = getClass().getResource(MAIN_APP_FXML_INCLUDE_RESOURCE);
-            fxmlLoader.setLocation(url);
-
-            BorderPane root = fxmlLoader.load(url.openStream());
-            ApplicationControl appControl = fxmlLoader.getController();
-
-            appControl.setPrimaryStage(primaryStage);
-            Scene scene = new Scene(root, 1500, 1000);
-            primaryStage.setScene(scene);
-            primaryStage.show();
-        }
-
-    public static void main(String[] args) {
-        launch(args);
-    }
-    public final static String BODY_FXML_INCLUDE_RESOURCE = "/Components/outputScreen/outputStocks/outputScreen.fxml";
-    public final static String ACTIONBAR_FXML_INCLUDE_RESOURCE = "/Components/inputScreen/stocksBookInputScreen/stocksBookInputScreen.fxml";
-    public final static String MAIN_APP_FXML_INCLUDE_RESOURCE = "/appControl/marketAppContainer.fxml";
-
-}
-//    public void start2(Stage primaryStage) throws Exception {
-//        FXMLLoader fxmlLoader = new FXMLLoader();
-//        URL url = getClass().getResource(ACTIONBAR_FXML_INCLUDE_RESOURCE);
-//        fxmlLoader.setLocation(url);
-//        VBox actionBar = fxmlLoader.load(url.openStream());
-//        LeftComponentControl leftController = fxmlLoader.getController();
-//
-//        fxmlLoader = new FXMLLoader();
-//        url = getClass().getResource(BODY_FXML_INCLUDE_RESOURCE);
-//
-//        fxmlLoader.setLocation(url);
-//        TabPane body = fxmlLoader.load(url.openStream());
-//        BodyControl BodyControl = fxmlLoader.getController();
-//
-//        // load body component and controller from fxml
-//        fxmlLoader = new FXMLLoader();
-//        url = getClass().getResource(MAIN_APP_FXML_INCLUDE_RESOURCE);
-//        fxmlLoader.setLocation(url);
-//        BorderPane root = fxmlLoader.load(url.openStream());
-//        ApplicationControl appController = fxmlLoader.getController();
-//
-//        root.setLeft(actionBar);
-//        root.setCenter(body);
-//
-//        appController.setLeftController(leftController);
-//        appController.setBodyController(BodyControl);
-//
-//        Scene scene = new Scene(root, 600,400);
-//        primaryStage.setScene(scene);
-//        primaryStage.show();
-//    }
Index: JavaFXapp/src/appControl/SubController.java
===================================================================
diff --git a/JavaFXapp/src/appControl/SubController.java b/JavaFXapp/src/appControl/SubController.java
deleted file mode 100644
--- a/JavaFXapp/src/appControl/SubController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,20 +0,0 @@
-package appControl;
-
-import SystemEngine.StocksTradeSystem;
-
-public interface SubController {
-    public void setManager(StocksTradeSystem manager);
-
-    public void setMainController(ApplicationControl applicationController);
-
-    public void submitData();
-    //public void knowAudience(SubScreen screen);
-
-    // public void informConnections();
-
-    public enum Type {
-        STOCKS_BOOK, TRADE, INTRODUCTION, TOP
-    }
-
-    }
-
Index: JavaFXapp/src/menuScreen/MenuScreenController.java
===================================================================
diff --git a/JavaFXapp/src/menuScreen/MenuScreenController.java b/JavaFXapp/src/menuScreen/MenuScreenController.java
deleted file mode 100644
--- a/JavaFXapp/src/menuScreen/MenuScreenController.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,93 +0,0 @@
-package menuScreen;
-
-import appControl.ApplicationControl;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.geometry.Insets;
-import javafx.scene.control.Button;
-import javafx.scene.control.Label;
-import javafx.scene.layout.Background;
-import javafx.scene.layout.BackgroundFill;
-import javafx.scene.layout.CornerRadii;
-import javafx.scene.layout.HBox;
-import javafx.scene.paint.Color;
-import javafx.stage.FileChooser;
-
-import java.io.File;
-
-public class MenuScreenController {
-
-
-    @FXML private Button buttonLoadXML;
-    @FXML private Label labelSystemStatus;
-    @FXML private Label labelFilePathLoaded;
-    @FXML private HBox statusBox;
-
-    StringProperty systemLoadedStatusString;
-    StringProperty systemLoadedPathMSG;
-
-
-    @FXML
-    void virtualizationRequestListener(ActionEvent event) throws Exception {
-        mainController.loadXMLFile(XML_FILE_NAME1, event);
-
-    }
-
-    private void informConnections() {
-
-    }
-
-    private void updateThis(String xmlFileName1) {
-        systemLoadedPathMSG.set("Currenly loaded XML: " + XML_FILE_NAME1);
-        systemLoadedStatusString.set("System's status: True");
-    }
-
-    @FXML
-    public void xmlLoadingAttemptListener(ActionEvent event) throws Exception {
-        FileChooser fileChooser = new FileChooser();
-        fileChooser.setTitle("Select XML file to load it");
-        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter("xml files", "*.xml"));
-        File selectedFile = fileChooser.showOpenDialog(mainController.getStage());
-        if (selectedFile == null){
-            return;
-        }
-        else {
-            if (!labelSystemStatus.getText().equals("System's status: " + TRUE)) {
-             if(mainController.loadXMLFile(selectedFile.getPath(), event)) {
-                 loadXMLLocal(selectedFile);
-             }
-            }
-        }
-    }
-
-    private void loadXMLLocal(File selectedFile) {
-        systemLoadedPathMSG.set("Currenly loaded XML: " + selectedFile.getPath());
-        systemLoadedStatusString.set("System's status: True");
-        statusBox.setBackground(new Background(new BackgroundFill(Color.LIGHTGREEN,
-                CornerRadii.EMPTY, Insets.EMPTY)));
-    }
-
-    public MenuScreenController(){
-        systemLoadedStatusString = new SimpleStringProperty("System's Status: false");
-        systemLoadedPathMSG = new SimpleStringProperty( "Currently XML loaded: Uninitialised");
-    }
-
-    public void setMainController(ApplicationControl mainController) {
-        this.mainController = mainController;
-    }
-
-    public void initialize() {
-        labelSystemStatus.textProperty().bind(systemLoadedStatusString);
-        labelFilePathLoaded.textProperty().bind(systemLoadedPathMSG);
-        System.out.println("body init");
-    }
-
-
-    private ApplicationControl mainController;
-    final static String XML_FILE_NAME1 = "C:\\ex2-small.xml"; //C:/Users/Z490/RSE/
-
-    final String FALSE = "FALSE";
-    final String TRUE = "TRUE";
-}
Index: JavaFXapp/src/appControl/ApplicationControl.java
===================================================================
diff --git a/JavaFXapp/src/appControl/ApplicationControl.java b/JavaFXapp/src/appControl/ApplicationControl.java
deleted file mode 100644
--- a/JavaFXapp/src/appControl/ApplicationControl.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,381 +0,0 @@
-package appControl;
-
-import DTO.*;
-import SystemEngine.MarketManager;
-import SystemEngine.StocksTradeSystem;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.control.*;
-import javafx.scene.layout.AnchorPane;
-import javafx.stage.Stage;
-import menuScreen.MenuScreenController;
-import usersTabPane.UsersController;
-import usersTabPane.adminTab.AdminTabController;
-import usersTabPane.singleUserTab.SingleUserTabController;
-
-import java.net.URL;
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-import java.util.ArrayList;
-import java.util.List;
-
-public class ApplicationControl {
-    final String SINGLE_USER_TAB_FXML_RESOURCE = "../usersTabPane/singleUserTab/singleUserTab2.fxml";
-    final String ADMIN_TAB_FXML_RESOURCE = "../usersTabPane/adminTab/admin.fxml";
-
-    @FXML
-    private TabPane bodyComponent;
-
-    @FXML
-    private AnchorPane topComponent;
-    @FXML
-    private MenuScreenController topComponentController;
-
-    @FXML
-    private TextArea textAreaInformingUser;
-
-    private final MarketManager marketManager;
-    private Stage primaryStage;
-    private MessengerArchitect messenger;
-    StringProperty activeStockInBook = null;
-    StringProperty textUserInformationProperty;
-    List<UserAction> userActionLog;
-
-    private boolean systemBootFinish;
-    private boolean XMLloadedSuccessfully;
-
-    private int actionCounter;
-    StringProperty currentTime;
-    private LocalDateTime getTimeMark(){return LocalDateTime.now();}
-    public List<UserAction> getMyEventList() { return userActionLog; }
-
-
-    public class UserAction {
-        public UserAction(int actionNum, boolean status, String details, LocalDateTime time) {
-            this.actionNum = actionNum;
-            this.status = status;
-            this.details = details;
-            this.time = time;
-            this.strTime = time.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS"));
-        }
-
-        private final int actionNum;
-        private final boolean status;
-        private final String details;
-        private final String strTime;
-        private final LocalDateTime time;
-
-        public boolean isStatus() {
-            return status;
-        }
-
-        public String getdetails() {
-            return details;
-        }
-
-        public String getstrTime() {
-            return strTime;
-        }
-
-        public LocalDateTime gettime() {
-            return time;
-        }
-
-        public int getactionNum() {
-            return actionNum;
-        }
-    }
-    private void userActionViaTextUserInformation(boolean status, ActionEvent event){
-//       if (systemBootFinish) {
-//           if (status) {
-               reloadTabsToTabsPane(event);
-//           }
-//       }
-
-        userActionLog.add(new UserAction(actionCounter, status, textUserInformationProperty.getValue(), getTimeMark()));
-        bodyComponentController.getAdminController().updateAdminLog();
-        ++actionCounter;
-    }
-
-    private void userActionViaGivenString(boolean status, String msg, ActionEvent event) {
-        userActionLog.add(new UserAction(actionCounter, status, msg, getTimeMark()));
-        ++actionCounter;
-
-        if (status) {
-            reloadTabsToTabsPane(event);
-        }
-
-
-    }
-
-    public ApplicationControl() {
-        LocalDateTime timeMark = LocalDateTime.now();
-        System.out.println("in ApplicationControl ctor");
-        actionCounter = 1;
-
-        XMLloadedSuccessfully = false;
-        systemBootFinish = false;
-
-        marketManager = new MarketManager();
-        messenger = new MessengerArchitect();
-        currentTime = new SimpleStringProperty(timeMark.format((DateTimeFormatter.ofPattern("HH:mm:ss:SSS"))));
-        textUserInformationProperty = new SimpleStringProperty(messenger.openingMessage());
-        userActionLog = new ArrayList<>();
-
-        MenuAction.setApplicationControl(this);
-        MenuAction.setMarketManager(marketManager);
-    }
-
-//    private void userActionViaTextUserInformation(UserAction action) {
-//        reloadTabsToTabsPane();
-//        actionCounter++;
-//        userActionLog.add(action);
-//    }
-
-
-
-    public void initialize() {
-        System.out.println("in ApplicationControl initialize()");
-        if (bodyComponentController != null && topComponentController != null) {
-            topComponentController.setMainController(this);
-            bodyComponentController.setMainController(this);
-
-        }
-        textAreaInformingUser.textProperty().bind(textUserInformationProperty);
-        userActionViaTextUserInformation(true, null);
-
-    }
-
-    public boolean loadXMLFile(String path, ActionEvent event) {
-        LocalDateTime timeMark = LocalDateTime.now();
-        boolean status = false;
-        try {
-            marketManager.loadXML(path);
-            textUserInformationProperty.setValue("File loaded successfully.");
-            systemBootFinish = true;
-            status = true;
-            userActionViaTextUserInformation(true, null);
-        } catch (Exception e) {
-            textUserInformationProperty.setValue(e.getMessage());
-            userActionViaGivenString(false, e.getMessage(), null);
-
-
-        }
-        XMLloadedSuccessfully = true;
-        return status;
-    }
-    @FXML
-    private UsersController bodyComponentController;
-
-    private void reloadTabsToTabsPane(ActionEvent event) {
-        try {
-            String currentlySelectedTabName = null;
-            String currentSelectedStock = null;
-            if (XMLloadedSuccessfully) {
-                currentlySelectedTabName = bodyComponentController.getOpenTab();
-                currentSelectedStock = bodyComponentController.getOpenStockAtAdmin();
-            }
-            bodyComponent.getTabs().clear();
-            addAdminTab(currentSelectedStock, event);
-            createUserTabs(new ArrayList<SingleUserTabController>());
-
-            if (XMLloadedSuccessfully) {
-                for (Tab tab : bodyComponent.getTabs()) {
-                    if (tab.getText().equals(currentlySelectedTabName)) {
-                        bodyComponent.setSelectionModel(tab.getTabPane().getSelectionModel());
-                        break;
-                    }
-                }
-            }
-
-
-        } catch (Exception e) {
-            textUserInformationProperty.setValue(e.getMessage());
-            userActionViaGivenString(false, e.getMessage(), event);
-        }
-
-    }
-
-    public StocksTradeSystem getMarketManager() {
-        return marketManager;
-    }
-
-
-    public void addAdminTab(String previouslySelectedStock, ActionEvent event) throws Exception {
-
-        FXMLLoader loader = new FXMLLoader();
-        URL url = getClass().getResource(ADMIN_TAB_FXML_RESOURCE);
-        loader.setLocation(url);
-        AnchorPane adminAP = loader.load();
-        Tab adminTab = new Tab();
-        adminTab.setContent(adminAP);
-        bodyComponentController.setAdminTab(adminTab);
-
-        AdminTabController adminController = loader.getController();
-        adminController.setMainController(this);
-
-        bodyComponentController.setAdminController(adminController);
-        adminController.loadAdminStocks(marketManager, previouslySelectedStock, event);
-
-        bodyComponent.getTabs().add(adminTab);
-        adminTab.setText("Admin Tab");
-
-    }
-
-
-
-
-    public List<SingleUserTabController> createUserTabs(List<SingleUserTabController> tabList) throws Exception {
-
-//        int savedSelectedIndex = bodyComponent.getSelectionModel().getSelectedIndex();
-        // bodyComponent.getTabs().clear();
-
-        for (String key : this.marketManager.getUsers().keySet()) {
-            int ctr = 0;
-            FXMLLoader loader = new FXMLLoader();
-            URL url = getClass().getResource(SINGLE_USER_TAB_FXML_RESOURCE);
-            loader.setLocation(url);
-            Tab userTab = loader.load();
-            //  Tab userTab = new Tab();
-            // userTab.setContent(content);
-
-
-            SingleUserTabController singleTabController = loader.getController();
-            tabList.add(singleTabController);
-
-            singleTabController.setMainController(this);
-            singleTabController.setUser(this.marketManager.getSafeUser(key));
-            userTab.setText(key);
-            singleTabController.wiringXMLtoTab(marketManager, key);
-
-            bodyComponent.getTabs().add(userTab);
-//            if (ctr==savedSelectedIndex)
-//                bodyComponent.setSelectionModel(userTab.getTabPane().getSelectionModel());
-//             //   savedSelectedTab = userTab;
-        }
-      //  tabPaneUsers.setSelectionModel(savedSelectedIndex);
-        return tabList;
-    }
-
-
-
-    public void setPrimaryStage(Stage primaryStage) {
-        this.primaryStage = primaryStage;
-    }
-
-    public Stage getStage() {
-        return primaryStage;
-    }
-
-    public void throwMainApplication(Exception e) {
-        textUserInformationProperty.setValue(e.getMessage());
-        userActionViaGivenString(false, e.getMessage(), null);
-    }
-
-
-    public void TradeCommit(InstructionDTO gatherInstructionDTO, String symbol, boolean buySelected, ActionEvent event) {
-        try {
-
-            CMD4ReturnBundle bundle = marketManager.operateOnMarket1(gatherInstructionDTO, symbol);
-            String msg = messenger.matchingActionMSG(bundle, buySelected);
-            textUserInformationProperty.setValue(msg);
-            userActionViaTextUserInformation(true, event);
-
-    } catch (Exception e)
-        {
-           textUserInformationProperty.setValue(e.getMessage());
-            userActionViaGivenString(false, e.getMessage(), event);
-        }
-    }
-
-    public UserDTO getUser(String userName) {
-        return (marketManager.getSafeUser(userName));
-    }
-
-    public List<UserDTO.StockPaperDTO> getUserStocksBook(String userName) {
-        return (marketManager.getSafeUser(userName).getOwnedStocks());
-    }
-
-    public boolean systemBootFinish() {
-        return systemBootFinish;
-    }
-
-
-}
-
-
-
-
-
-//    public void updateStocksBookSearchedSymbol(String symbol) {
-//    }
-
-//    public void loadComponents() {
-//
-//    }
-
-
-//   currentLeftComponentController = leftComponentController;
-//   informConnections(leftComponentController,bodyComponentController);
-//    private void informConnections(SubController controller, SubScreen screen) {
-//        controller.know(screen);
-//        screen.know(controller);
-//    }
-//    public void readXmlToEngine() throws IOException {
-//        leftComponentController.submitData();
-//        rightComponentController.submitData();
-//        bottomComponentController.submitData();
-//    }
-
-//    public void requestUpdateTradeOutput(CMD4ReturnBundle bundle) {
-//        bodyComponentController.updateTradeScreen(bundle);
-//    }
-//
-//    public void requestUpdateStocksBook(String enteredSymbolText) throws Exception {
-//        //if stock found
-//        bodyComponentController.updateStocksBookSearchedSymbol(marketManager.getSafeStock(enteredSymbolText), enteredSymbolText);
-//        //else error
-//    }
-
-
-// public void requestLoadUI(SubController.Type requested) throws IOException {
-//        if (requested.equals(SubController.Type.STOCKS_BOOK)) {
-//
-//        } else if (requested.equals(SubController.Type.TRADE)) {
-//
-//
-//        } else if (requested.equals(SubController.Type.INTRODUCTION)) {
-//
-//        }
-//
-//    }
-
-//    public void requestLoadUI(SubController.Type requested) throws IOException {
-//        if (requested.equals(SubController.Type.STOCKS_BOOK)) {
-//            AnchorPane control = FXMLLoader.load(getClass().getResource(STOCKSBOOK_CONTROL_RESOURCE));
-//            leftComponent.getChildren().setAll(control);
-//            currentLeftComponentController = new StocksBookInputScreenController();
-//
-//        } else if (requested.equals(SubController.Type.TRADE)) {
-//            AnchorPane newLeftControl = FXMLLoader.load(getClass().getResource("/stocksBookInputScreen.fxml"));
-//
-//          //  leftComponent.getChildren().setAll(control);
-//            currentLeftComponentController = new TradeInputScreenController(leftComponent);
-//
-//        } else if (requested.equals(SubController.Type.INTRODUCTION)) {
-//            AnchorPane blankControl = new AnchorPane();
-//            //put money icon
-//            blankControl.setPrefHeight(400);
-//            blankControl.setPrefWidth(270);
-//            leftComponent.getChildren().setAll(blankControl);
-//            currentLeftComponentController = new StocksBookInputScreenController();
-//            System.out.println("in introduction");
-//
-//        }
-//        currentLeftComponentController.setMainController(this);
-//        currentLeftComponentController.setManager(this.marketManager);
-//        currentLeftComponentController.submitData();
-//    }
\ No newline at end of file
Index: SystemEngine/src/SystemEngine/Transaction.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Transaction.java b/SystemEngine/src/SystemEngine/Transaction.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Transaction.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,64 +0,0 @@
-package SystemEngine;
-
-import java.io.Serializable;
-import java.time.LocalDateTime;
-import java.time.format.DateTimeFormatter;
-
-public class Transaction implements Serializable {
-
-    public LocalDateTime getTime() {
-        return date;
-    }
-
-    public int getQuantity() {
-        return quantity;
-    }
-
-    public int getPrice() {
-        return price;
-    } //should return sharesRate
-
-    public int getTotalPayment() {
-        return price*quantity;
-    }
-
-    public String getInstructionType(){return instructionType; }
-
-    public String getInvokedName(){return invokedName;}
-
-    public Transaction(LocalDateTime time, int price, int quantity, String instructionType, String invokedName, Boolean isBuying, String operatorName) {
-        this.date = time;
-        this.price = price;
-        this.quantity = quantity;
-        this.instructionType = instructionType;
-        this.invokedName = invokedName;
-        if (isBuying) {
-            buyer = invokedName;
-            seller = operatorName;
-        }
-        else {
-            seller = invokedName;
-            buyer = operatorName;
-        }
-    }
-
-    @Override
-    public String toString() {
-        return "| " + date.format(DateTimeFormatter.ofPattern("HH:mm:ss:SSS")) + "| " + price + "| " + quantity + "| " + price*quantity + "|";
-
-    }
-//    protected  Instruction Instruction;
-    protected boolean isNew = true;
-    protected LocalDateTime date;
-    protected int price;
-    protected int quantity;
-    String invokersName, invokedName;
-    String buyer, seller;
-    public boolean getIfNew(){return isNew;}
-    public void setIsNew(boolean b){isNew = b;}
-    private String instructionType;
-
-    public String getBuyersName() { return buyer; }
-
-    public String getSellersName() { return seller; }
-}
Index: JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen2.fxml
===================================================================
diff --git a/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen2.fxml b/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen2.fxml
deleted file mode 100644
--- a/JavaFXapp/src/Components/outputScreen/outputStocks/outputScreen2.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,174 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.geometry.Insets?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ScrollPane?>
-<?import javafx.scene.control.SplitPane?>
-<?import javafx.scene.control.Tab?>
-<?import javafx.scene.control.TabPane?>
-<?import javafx.scene.control.TableColumn?>
-<?import javafx.scene.control.TableView?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.HBox?>
-<?import javafx.scene.layout.VBox?>
-
-
-<SplitPane dividerPositions="0.5" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="1000.0" xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Components.outputScreen.outputStocks.OutputScreenController">
-   <items>
-      <AnchorPane prefHeight="200.0" prefWidth="200.0">
-         <children>
-            <ScrollPane prefHeight="398.0" prefWidth="296.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-               <content>
-                  <TabPane prefHeight="372.0" prefWidth="601.0" tabClosingPolicy="UNAVAILABLE">
-                     <tabs>
-                        <Tab text="Buy">
-                           <content>
-                              <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewBuyBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                       <columns>
-                                          <TableColumn fx:id="tabBuyPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabBuyQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabBuyDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabBuyOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabBuyTrader" prefWidth="75.0" text="Trader" />
-                                       </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                        </Tab>
-                        <Tab fx:id="tabSell" text="Sell">
-                           <content>
-                              <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader1" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewSaleBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                       <columns>
-                                          <TableColumn fx:id="tabSellPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabSellQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabSellDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabSellOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabSellTrader" prefWidth="75.0" text="Trader" />
-                                       </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                        </Tab>
-                        <Tab fx:id="tabTransaction" text="View History">
-                           <content>
-                              <AnchorPane>
-                                 <children>
-                                    <HBox prefHeight="29.0" prefWidth="594.0">
-                                       <children>
-                                          <Label fx:id="bookTableHeader11" alignment="CENTER" prefHeight="17.0" prefWidth="593.0" text="HEADER FORMAT">
-                                             <HBox.margin>
-                                                <Insets top="5.0" />
-                                             </HBox.margin>
-                                          </Label>
-                                       </children>
-                                    </HBox>
-                                    <TableView fx:id="tableViewTransactionBook" layoutY="25.0" prefHeight="318.0" prefWidth="601.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="25.0">
-                                       <columns>
-                                          <TableColumn fx:id="tabTransactionPrice" prefWidth="75.0" text="Price" />
-                                          <TableColumn fx:id="tabTransactionQuantity" prefWidth="75.0" text="Quantity" />
-                                          <TableColumn fx:id="tabTransactionDate" prefWidth="75.0" text="Date\Time" />
-                                          <TableColumn fx:id="tabTransactionOriginal" prefWidth="75.0" text="Original Type" />
-                                          <TableColumn fx:id="tabTransactionBuyer" prefWidth="75.0" text="Buyer" />
-                                          <TableColumn fx:id="tabTransactionSeller" prefWidth="75.0" text="Seller" />
-                                       </columns>
-                                       <columnResizePolicy>
-                                          <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                       </columnResizePolicy>
-                                    </TableView>
-                                 </children>
-                              </AnchorPane>
-                           </content>
-                        </Tab>
-                     </tabs>
-                  </TabPane>
-               </content>
-            </ScrollPane>
-         </children>
-      </AnchorPane>
-      <AnchorPane prefHeight="200.0" prefWidth="200.0">
-         <children>
-            <ScrollPane AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-               <content>
-                  <VBox prefHeight="398.0" prefWidth="600.0">
-                     <children>
-                        <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="241.0" prefWidth="577.0">
-                           <children>
-                              <AnchorPane layoutX="1.0" minHeight="0.0" minWidth="0.0" prefHeight="215.0" prefWidth="598.0">
-                                 <children>
-                                    <VBox prefHeight="215.0" prefWidth="598.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
-                                       <children>
-                                          <Label text="Transaction" />
-                                          <ScrollPane>
-                                             <content>
-                                                <TableView fx:id="tableViewTrade" accessibleText="Test" prefHeight="212.0" prefWidth="575.0">
-                                                   <columns>
-                                                      <TableColumn fx:id="tabTradeTabDate" prefWidth="75.0" text="Date" />
-                                                      <TableColumn fx:id="tabTradeTabType" prefWidth="75.0" text="Type" />
-                                                      <TableColumn fx:id="tabTradeTabQuantity" prefWidth="75.0" text="Quantity" />
-                                                      <TableColumn fx:id="tabTradeTabPrice" prefWidth="75.0" text="Price" />
-                                                   </columns>
-                                                   <columnResizePolicy>
-                                                      <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
-                                                   </columnResizePolicy>
-                                                </TableView>
-                                             </content>
-                                          </ScrollPane>
-                                       </children>
-                                    </VBox>
-                                 </children>
-                              </AnchorPane>
-                           </children>
-                        </AnchorPane>
-                        <AnchorPane prefHeight="132.0" prefWidth="600.0">
-                           <children>
-                              <VBox layoutY="-24.0" prefHeight="155.0" prefWidth="600.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="-24.0">
-                                 <children>
-                                    <Label text="Reminder" />
-                                    <TextArea fx:id="textAreaInfo" prefHeight="156.0" prefWidth="600.0">
-                                       <padding>
-                                          <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
-                                       </padding>
-                                    </TextArea>
-                                 </children>
-                              </VBox>
-                           </children>
-                        </AnchorPane>
-                     </children>
-                  </VBox>
-               </content>
-            </ScrollPane>
-         </children>
-      </AnchorPane>
-   </items>
-</SplitPane>
Index: SystemEngine/src/SystemEngine/Instruction/MKT.java
===================================================================
diff --git a/SystemEngine/src/SystemEngine/Instruction/MKT.java b/SystemEngine/src/SystemEngine/Instruction/MKT.java
deleted file mode 100644
--- a/SystemEngine/src/SystemEngine/Instruction/MKT.java	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ /dev/null	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
@@ -1,46 +0,0 @@
-package SystemEngine.Instruction;
-
-import SystemEngine.Stock;
-import SystemEngine.Transaction;
-
-import java.time.LocalDateTime;
-
-public class MKT extends LMT {
-    public MKT(LocalDateTime _time, boolean _isBuy, int _quantity, String operatorName) throws Exception {
-        super(_time, _isBuy, 0, _quantity, operatorName);
-    }
-
-    //return status?
-    public void prepareAddingRemainderToInstructionList(Stock addedTo) {
-        boolean status;
-  //      price = addedTo.getPrice();
-//        if (isBuy)
-//            status = addedTo.getBuyInstructionData().add(this);
-//        else
-//            status = addedTo.getSaleInstructionData().add(this);
-    }
-
-    @Override
-    public void buyStocks() {
-
-    }
-
-    @Override
-    public void sellStocks() {
-
-    }
-
-    @Override
-    public Transaction operateStock(Instruction newInstruction) {
-        newInstruction.setPrice(this.price);
-        return super.operateStock(newInstruction);
-    }
-
-    @Override
-    public boolean matchesOppositeInstruction(Instruction newBuyInstruction) {
-        return true;
-    }
-
-}
-
-
Index: out/production/JavaFXapp/usersTabPane/adminTab/admin.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.ComboBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.Separator?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n\r\n\r\n<AnchorPane xmlns=\"http://javafx.com/javafx/8.0.281\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"usersTabPane.adminTab.AdminTabController\">\r\n   <children>\r\n      <GridPane alignment=\"CENTER\" hgap=\"5.0\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" vgap=\"5.0\">\r\n        <columnConstraints>\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n        </rowConstraints>\r\n         <children>\r\n            <Label contentDisplay=\"CENTER\" text=\"Admin, can you feel the power?\" />\r\n            <Label text=\"Buy Instructions:\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"Sale Instructions:\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" />\r\n            <Label text=\"Transaction History:\" GridPane.rowIndex=\"3\" />\r\n            <HBox alignment=\"CENTER\" GridPane.columnIndex=\"1\">\r\n               <children>\r\n                  <Label text=\"Searched stock:\" />\r\n                  <ComboBox fx:id=\"comboBoxChooseStock2\" prefWidth=\"150.0\" promptText=\"Choose stock here\" />\r\n                  <Separator orientation=\"VERTICAL\" prefHeight=\"200.0\" />\r\n                  <Button mnemonicParsing=\"false\" text=\"Search!\" />\r\n               </children>\r\n            </HBox>\r\n            <TableView fx:id=\"tableViewBuyBook\" prefHeight=\"318.0\" prefWidth=\"601.0\" GridPane.rowIndex=\"2\">\r\n               <columns>\r\n                  <TableColumn fx:id=\"tabBuyPrice\" prefWidth=\"75.0\" text=\"Price\" />\r\n                  <TableColumn fx:id=\"tabBuyQuantity\" prefWidth=\"75.0\" text=\"Quantity\" />\r\n                  <TableColumn fx:id=\"tabBuyDate\" prefWidth=\"75.0\" text=\"Date\\Time\" />\r\n                  <TableColumn fx:id=\"tabBuyOriginal\" prefWidth=\"75.0\" text=\"Original Type\" />\r\n                  <TableColumn fx:id=\"tabBuyTrader\" prefWidth=\"75.0\" text=\"Trader\" />\r\n               </columns>\r\n               <columnResizePolicy>\r\n                  <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n               </columnResizePolicy>\r\n            </TableView>\r\n            <TableView fx:id=\"tableViewSaleBook\" prefHeight=\"318.0\" prefWidth=\"601.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\">\r\n               <columns>\r\n                  <TableColumn fx:id=\"tabSellPrice\" prefWidth=\"75.0\" text=\"Price\" />\r\n                  <TableColumn fx:id=\"tabSellQuantity\" prefWidth=\"75.0\" text=\"Quantity\" />\r\n                  <TableColumn fx:id=\"tabSellDate\" prefWidth=\"75.0\" text=\"Date\\Time\" />\r\n                  <TableColumn fx:id=\"tabSellOriginal\" prefWidth=\"75.0\" text=\"Original Type\" />\r\n                  <TableColumn fx:id=\"tabSellTrader\" prefWidth=\"75.0\" text=\"Trader\" />\r\n               </columns>\r\n               <columnResizePolicy>\r\n                  <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n               </columnResizePolicy>\r\n            </TableView>\r\n            <TableView fx:id=\"tableViewTransactionBook\" prefHeight=\"318.0\" prefWidth=\"601.0\" GridPane.rowIndex=\"4\">\r\n               <columns>\r\n                  <TableColumn fx:id=\"tabTransactionPrice\" prefWidth=\"75.0\" text=\"Price\" />\r\n                  <TableColumn fx:id=\"tabTransactionQuantity\" prefWidth=\"75.0\" text=\"Quantity\" />\r\n                  <TableColumn fx:id=\"tabTransactionDate\" prefWidth=\"75.0\" text=\"Date\\Time\" />\r\n                  <TableColumn fx:id=\"tabTransactionOriginal\" prefWidth=\"75.0\" text=\"Original Type\" />\r\n                  <TableColumn fx:id=\"tabTransactionBuyer\" prefWidth=\"75.0\" text=\"Buyer\" />\r\n                  <TableColumn fx:id=\"tabTransactionSeller\" prefWidth=\"75.0\" text=\"Seller\" />\r\n               </columns>\r\n               <columnResizePolicy>\r\n                  <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n               </columnResizePolicy>\r\n            </TableView>\r\n            <Label text=\"Actions History\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\" />\r\n            <TableView fx:id=\"tableActionsHistory\" prefHeight=\"318.0\" prefWidth=\"601.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\">\r\n               <columns>\r\n                  <TableColumn fx:id=\"colHistoryActionNumber\" prefWidth=\"75.0\" text=\"Action No'\" />\r\n                  <TableColumn fx:id=\"colHistoryMessage\" prefWidth=\"75.0\" text=\"Message\" />\r\n                  <TableColumn fx:id=\"colHistoryTime\" prefWidth=\"75.0\" text=\"Time\" />\r\n               </columns>\r\n               <columnResizePolicy>\r\n                  <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n               </columnResizePolicy>\r\n            </TableView>\r\n         </children>\r\n         <padding>\r\n            <Insets bottom=\"5.0\" left=\"5.0\" right=\"5.0\" top=\"5.0\" />\r\n         </padding>\r\n      </GridPane>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/JavaFXapp/usersTabPane/adminTab/admin.fxml b/out/production/JavaFXapp/usersTabPane/adminTab/admin.fxml
--- a/out/production/JavaFXapp/usersTabPane/adminTab/admin.fxml	(revision e30cbd592e89fa667e70abae1df7f6cadeca3421)
+++ b/out/production/JavaFXapp/usersTabPane/adminTab/admin.fxml	(date 1622543847802)
@@ -13,7 +13,6 @@
 <?import javafx.scene.layout.HBox?>
 <?import javafx.scene.layout.RowConstraints?>
 
-
 <AnchorPane xmlns="http://javafx.com/javafx/8.0.281" xmlns:fx="http://javafx.com/fxml/1" fx:controller="usersTabPane.adminTab.AdminTabController">
    <children>
       <GridPane alignment="CENTER" hgap="5.0" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" vgap="5.0">
@@ -38,7 +37,7 @@
                   <Label text="Searched stock:" />
                   <ComboBox fx:id="comboBoxChooseStock2" prefWidth="150.0" promptText="Choose stock here" />
                   <Separator orientation="VERTICAL" prefHeight="200.0" />
-                  <Button mnemonicParsing="false" text="Search!" />
+                  <Button mnemonicParsing="false" onAction="#loadAdminChosenStock" text="Search!" />
                </children>
             </HBox>
             <TableView fx:id="tableViewBuyBook" prefHeight="318.0" prefWidth="601.0" GridPane.rowIndex="2">
